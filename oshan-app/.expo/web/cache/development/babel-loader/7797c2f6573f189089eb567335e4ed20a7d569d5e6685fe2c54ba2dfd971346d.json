{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar lightTheme = {\n  colors: {\n    primary: '#1a1a1a',\n    secondary: '#2563eb',\n    accent: '#f59e0b',\n    background: '#fafafa',\n    surface: '#ffffff',\n    text: '#1a1a1a',\n    textSecondary: '#6b7280',\n    border: '#e5e7eb'\n  },\n  fonts: {\n    serif: 'PlayfairDisplay-Regular',\n    sans: 'Inter-Regular'\n  },\n  spacing: {\n    xs: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 32\n  }\n};\nvar darkTheme = {\n  colors: {\n    primary: '#ffffff',\n    secondary: '#3b82f6',\n    accent: '#fbbf24',\n    background: '#0a0a0a',\n    surface: '#1a1a1a',\n    text: '#ffffff',\n    textSecondary: '#a1a1aa',\n    border: '#27272a'\n  },\n  fonts: {\n    serif: 'PlayfairDisplay-Regular',\n    sans: 'Inter-Regular'\n  },\n  spacing: {\n    xs: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 32\n  }\n};\nvar ThemeContext = createContext({\n  theme: lightTheme,\n  isDark: false,\n  toggleTheme: function toggleTheme() {}\n});\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDark = _useState2[0],\n    setIsDark = _useState2[1];\n  var theme = isDark ? darkTheme : lightTheme;\n  var toggleTheme = function toggleTheme() {\n    setIsDark(!isDark);\n  };\n  return _jsx(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      isDark: isDark,\n      toggleTheme: toggleTheme\n    },\n    children: children\n  });\n};\nexport var useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","lightTheme","colors","primary","secondary","accent","background","surface","text","textSecondary","border","fonts","serif","sans","spacing","xs","sm","md","lg","xl","darkTheme","ThemeContext","theme","isDark","toggleTheme","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","setIsDark","Provider","value","useTheme"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\nimport { StyleSheet } from 'react-native';\n\ninterface Theme {\n  colors: {\n    primary: string;\n    secondary: string;\n    accent: string;\n    background: string;\n    surface: string;\n    text: string;\n    textSecondary: string;\n    border: string;\n  };\n  fonts: {\n    serif: string;\n    sans: string;\n  };\n  spacing: {\n    xs: number;\n    sm: number;\n    md: number;\n    lg: number;\n    xl: number;\n  };\n}\n\nconst lightTheme: Theme = {\n  colors: {\n    primary: '#1a1a1a',\n    secondary: '#2563eb',\n    accent: '#f59e0b',\n    background: '#fafafa',\n    surface: '#ffffff',\n    text: '#1a1a1a',\n    textSecondary: '#6b7280',\n    border: '#e5e7eb',\n  },\n  fonts: {\n    serif: 'PlayfairDisplay-Regular',\n    sans: 'Inter-Regular',\n  },\n  spacing: {\n    xs: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 32,\n  },\n};\n\nconst darkTheme: Theme = {\n  colors: {\n    primary: '#ffffff',\n    secondary: '#3b82f6',\n    accent: '#fbbf24',\n    background: '#0a0a0a',\n    surface: '#1a1a1a',\n    text: '#ffffff',\n    textSecondary: '#a1a1aa',\n    border: '#27272a',\n  },\n  fonts: {\n    serif: 'PlayfairDisplay-Regular',\n    sans: 'Inter-Regular',\n  },\n  spacing: {\n    xs: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 32,\n  },\n};\n\ninterface ThemeContextType {\n  theme: Theme;\n  isDark: boolean;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType>({\n  theme: lightTheme,\n  isDark: false,\n  toggleTheme: () => {},\n});\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [isDark, setIsDark] = useState(false);\n  const theme = isDark ? darkTheme : lightTheme;\n\n  const toggleTheme = () => {\n    setIsDark(!isDark);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, isDark, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AA2B9E,IAAMC,UAAiB,GAAG;EACxBC,MAAM,EAAE;IACNC,OAAO,EAAE,SAAS;IAClBC,SAAS,EAAE,SAAS;IACpBC,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,SAAS;IACrBC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE,SAAS;IACfC,aAAa,EAAE,SAAS;IACxBC,MAAM,EAAE;EACV,CAAC;EACDC,KAAK,EAAE;IACLC,KAAK,EAAE,yBAAyB;IAChCC,IAAI,EAAE;EACR,CAAC;EACDC,OAAO,EAAE;IACPC,EAAE,EAAE,CAAC;IACLC,EAAE,EAAE,CAAC;IACLC,EAAE,EAAE,EAAE;IACNC,EAAE,EAAE,EAAE;IACNC,EAAE,EAAE;EACN;AACF,CAAC;AAED,IAAMC,SAAgB,GAAG;EACvBlB,MAAM,EAAE;IACNC,OAAO,EAAE,SAAS;IAClBC,SAAS,EAAE,SAAS;IACpBC,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,SAAS;IACrBC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE,SAAS;IACfC,aAAa,EAAE,SAAS;IACxBC,MAAM,EAAE;EACV,CAAC;EACDC,KAAK,EAAE;IACLC,KAAK,EAAE,yBAAyB;IAChCC,IAAI,EAAE;EACR,CAAC;EACDC,OAAO,EAAE;IACPC,EAAE,EAAE,CAAC;IACLC,EAAE,EAAE,CAAC;IACLC,EAAE,EAAE,EAAE;IACNC,EAAE,EAAE,EAAE;IACNC,EAAE,EAAE;EACN;AACF,CAAC;AAQD,IAAME,YAAY,GAAGzB,aAAa,CAAmB;EACnD0B,KAAK,EAAErB,UAAU;EACjBsB,MAAM,EAAE,KAAK;EACbC,WAAW,EAAE,SAAbA,WAAWA,CAAA,EAAQ,CAAC;AACtB,CAAC,CAAC;AAMF,OAAO,IAAMC,aAA2C,GAAG,SAA9CA,aAA2CA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACpE,IAAAC,SAAA,GAA4B9B,QAAQ,CAAC,KAAK,CAAC;IAAA+B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCL,MAAM,GAAAM,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAMP,KAAK,GAAGC,MAAM,GAAGH,SAAS,GAAGnB,UAAU;EAE7C,IAAMuB,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBO,SAAS,CAAC,CAACR,MAAM,CAAC;EACpB,CAAC;EAED,OACEvB,IAAA,CAACqB,YAAY,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA,MAAM;MAAEC,WAAW,EAAXA;IAAY,CAAE;IAAAG,QAAA,EAC1DA;EAAQ,CACY,CAAC;AAE5B,CAAC;AAED,OAAO,IAAMO,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAASrC,UAAU,CAACwB,YAAY,CAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}