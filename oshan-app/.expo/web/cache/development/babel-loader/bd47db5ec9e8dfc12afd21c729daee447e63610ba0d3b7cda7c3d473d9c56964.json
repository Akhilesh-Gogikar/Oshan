{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { GoogleSignin } from '@react-native-google-signin/google-signin';\nimport auth from '@react-native-firebase/auth';\nWebBrowser.maybeCompleteAuthSession();\nGoogleSignin.configure({\n  webClientId: process.env.EXPO_PUBLIC_WEB_CLIENT_ID,\n  offlineAccess: true\n});\nexport var signInWithGoogle = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var userInfo = yield GoogleSignin.signIn();\n      var idToken = userInfo.idToken;\n      var googleCredential = auth.GoogleAuthProvider.credential(idToken);\n      var userCredential = yield auth().signInWithCredential(googleCredential);\n      console.log('User signed in with Google:', userCredential.user);\n      return userCredential.user;\n    } catch (error) {\n      console.error('Google Sign-In Error:', error);\n      throw error;\n    }\n  });\n  return function signInWithGoogle() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var signOut = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      yield auth().signOut();\n      yield GoogleSignin.revokeAccess();\n      yield GoogleSignin.signOut();\n      console.log('User signed out.');\n    } catch (error) {\n      console.error('Sign Out Error:', error);\n      throw error;\n    }\n  });\n  return function signOut() {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["WebBrowser","GoogleSignin","auth","maybeCompleteAuthSession","configure","webClientId","process","env","EXPO_PUBLIC_WEB_CLIENT_ID","offlineAccess","signInWithGoogle","_ref","_asyncToGenerator","userInfo","signIn","idToken","googleCredential","GoogleAuthProvider","credential","userCredential","signInWithCredential","console","log","user","error","apply","arguments","signOut","_ref2","revokeAccess"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/src/services/authService.ts"],"sourcesContent":["import * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nimport { GoogleSignin } from '@react-native-google-signin/google-signin';\nimport auth from '@react-native-firebase/auth'; // Ensure you have installed @react-native-firebase/app and @react-native-firebase/auth\n\nWebBrowser.maybeCompleteAuthSession();\n\n// Configure Google Sign-In for Firebase (Web Client ID is for Firebase authentication)\nGoogleSignin.configure({\n    webClientId: process.env.EXPO_PUBLIC_WEB_CLIENT_ID, // client ID of type \"web application\" for your Firebase project\n    offlineAccess: true, // if you want to access Google API on behalf of the user FROM YOUR SERVER\n});\n\nexport const signInWithGoogle = async () => {\n    try {\n        const userInfo = await GoogleSignin.signIn();\n        const idToken = userInfo.idToken;\n        \n        // Create a Google credential with the token\n        const googleCredential = auth.GoogleAuthProvider.credential(idToken);\n\n        // Sign-in the user with the credential\n        const userCredential = await auth().signInWithCredential(googleCredential);\n        console.log('User signed in with Google:', userCredential.user);\n        return userCredential.user;\n    } catch (error) {\n        console.error('Google Sign-In Error:', error);\n        throw error;\n    }\n};\n\nexport const signOut = async () => {\n    try {\n        await auth().signOut();\n        await GoogleSignin.revokeAccess();\n        await GoogleSignin.signOut();\n        console.log('User signed out.');\n    } catch (error) {\n        console.error('Sign Out Error:', error);\n        throw error;\n    }\n};"],"mappings":";AACA,OAAO,KAAKA,UAAU,MAAM,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,2CAA2C;AACxE,OAAOC,IAAI,MAAM,6BAA6B;AAE9CF,UAAU,CAACG,wBAAwB,CAAC,CAAC;AAGrCF,YAAY,CAACG,SAAS,CAAC;EACnBC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAClDC,aAAa,EAAE;AACnB,CAAC,CAAC;AAEF,OAAO,IAAMC,gBAAgB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IACxC,IAAI;MACA,IAAMC,QAAQ,SAASZ,YAAY,CAACa,MAAM,CAAC,CAAC;MAC5C,IAAMC,OAAO,GAAGF,QAAQ,CAACE,OAAO;MAGhC,IAAMC,gBAAgB,GAAGd,IAAI,CAACe,kBAAkB,CAACC,UAAU,CAACH,OAAO,CAAC;MAGpE,IAAMI,cAAc,SAASjB,IAAI,CAAC,CAAC,CAACkB,oBAAoB,CAACJ,gBAAgB,CAAC;MAC1EK,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,cAAc,CAACI,IAAI,CAAC;MAC/D,OAAOJ,cAAc,CAACI,IAAI;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACf;EACJ,CAAC;EAAA,gBAhBYd,gBAAgBA,CAAA;IAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;EAAA;AAAA,GAgB5B;AAED,OAAO,IAAMC,OAAO;EAAA,IAAAC,KAAA,GAAAhB,iBAAA,CAAG,aAAY;IAC/B,IAAI;MACA,MAAMV,IAAI,CAAC,CAAC,CAACyB,OAAO,CAAC,CAAC;MACtB,MAAM1B,YAAY,CAAC4B,YAAY,CAAC,CAAC;MACjC,MAAM5B,YAAY,CAAC0B,OAAO,CAAC,CAAC;MAC5BN,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACnC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,MAAMA,KAAK;IACf;EACJ,CAAC;EAAA,gBAVYG,OAAOA,CAAA;IAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAUnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}