{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport backendApi from './apiService';\nexport var storeQuizResults = function () {\n  var _ref = _asyncToGenerator(function* (answers) {\n    try {\n      var response = yield backendApi.post('/profile', answers);\n      console.log(\"Quiz results stored:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error storing quiz results:\", error);\n      throw error;\n    }\n  });\n  return function storeQuizResults(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getProfile = function () {\n  var _ref2 = _asyncToGenerator(function* (userId) {\n    try {\n      var response = yield backendApi.get(`/profile/${userId}`);\n      return response.data;\n    } catch (error) {\n      var _response;\n      console.error(\"Error fetching user profile:\", error);\n      if (error.response && ((_response = error.response) == null ? void 0 : _response.status) === 404) {\n        return null;\n      }\n      throw error;\n    }\n  });\n  return function getProfile(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getThemes = function () {\n  var _ref3 = _asyncToGenerator(function* (userId) {\n    try {\n      var response = yield backendApi.get(`/themes/${userId}`);\n      return response.data;\n    } catch (error) {\n      var _response2;\n      console.error(\"Error fetching themes:\", error);\n      if (error.response && (_response2 = error.response) != null && _response2.status) {}\n      return [];\n    }\n  });\n  return function getThemes(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getStockReport = function () {\n  var _ref4 = _asyncToGenerator(function* (stockId) {\n    try {\n      var response = yield backendApi.post('/report', {\n        stockId: stockId\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching stock report:\", error);\n      throw error;\n    }\n  });\n  return function getStockReport(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var sendChatMessage = function () {\n  var _ref5 = _asyncToGenerator(function* (messages) {\n    try {\n      var response = yield backendApi.post('/chat', {\n        messages: messages\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error sending chat message:\", error);\n      throw error;\n    }\n  });\n  return function sendChatMessage(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["backendApi","storeQuizResults","_ref","_asyncToGenerator","answers","response","post","console","log","data","error","_x","apply","arguments","getProfile","_ref2","userId","get","_response","status","_x2","getThemes","_ref3","_response2","_x3","getStockReport","_ref4","stockId","_x4","sendChatMessage","_ref5","messages","_x5"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/src/services/backendService.ts"],"sourcesContent":["import backendApi from './apiService';\nimport { Theme, ChatMessage  as ClientChatMessage } from '../types/models'; // Import ChatMessage as ClientChatMessage\nimport { AxiosError } from 'axios';\n\n// Define a type for the messages expected by the backend\ninterface BackendChatMessage {\n  role: 'user' | 'assistant' | 'system'; // Backend can accept system messages\n  content: string;\n}\n\nexport const storeQuizResults = async (answers: object) => {\n  try {\n    const response = await backendApi.post('/profile', answers);\n    console.log(\"Quiz results stored:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error storing quiz results:\", error);\n    throw error;\n  }\n}\n\nexport const getProfile = async (userId: string) => {\n  try {\n    const response = await backendApi.get(`/profile/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user profile:\", error);\n    // If the profile doesn't exist, the backend will return a 404, we can treat that as no profile found\n    if ((error as AxiosError).response && (error as AxiosError).response?.status === 404) {\n        return null;\n    }\n    throw error;\n  }\n}\n\nexport const getThemes = async (userId: string): Promise<Theme[]> => {\n  try {\n    const response = await backendApi.get(`/themes/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching themes:\", error);\n    if ((error as AxiosError).response && (error as AxiosError).response?.status) {\n      // You might want to handle specific error statuses here if needed\n    }\n    return [];\n  }\n}\n\nexport const getStockReport = async (stockId: string): Promise<string> => {\n  try {\n    const response = await backendApi.post('/report', { stockId });\n    return response.data; // Expecting markdown string\n  } catch (error) {\n    console.error(\"Error fetching stock report:\", error);\n    throw error;\n  }\n}\n\nexport const sendChatMessage = async (messages: BackendChatMessage[]) => {\n  try {\n    const response = await backendApi.post('/chat', { messages });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error sending chat message:\", error);\n    throw error;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}