{"ast":null,"code":"import _construct from \"@babel/runtime/helpers/construct\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Base64 from './Base64';\nimport { isString } from './validate';\nexport * from './id';\nexport * from './path';\nexport * from './promise';\nexport * from './validate';\nexport { default as Base64 } from './Base64';\nexport { default as ReferenceBase } from './ReferenceBase';\nexport function getDataUrlParts(dataUrlString) {\n  var isBase64 = dataUrlString.includes(';base64');\n  var _dataUrlString$split = dataUrlString.split(','),\n    _dataUrlString$split2 = _slicedToArray(_dataUrlString$split, 2),\n    mediaType = _dataUrlString$split2[0],\n    base64String = _dataUrlString$split2[1];\n  if (!mediaType || !base64String) {\n    return {\n      base64String: undefined,\n      mediaType: undefined\n    };\n  }\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n  return {\n    base64String: base64String,\n    mediaType: mediaType\n  };\n}\nexport function once(fn, context) {\n  var onceResult;\n  var ranOnce = false;\n  return function onceInner() {\n    if (!ranOnce) {\n      ranOnce = true;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      onceResult = fn.apply(context || this, args);\n    }\n    return onceResult;\n  };\n}\nexport function isError(value) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n  return value instanceof Error;\n}\nexport function hasOwnProperty(target, property) {\n  return Object.hasOwnProperty.call(target, property);\n}\nexport function stripTrailingSlash(string) {\n  if (!isString(string)) {\n    return string;\n  }\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\nexport var isIOS = Platform.OS === 'ios';\nexport var isAndroid = Platform.OS === 'android';\nexport var isOther = Platform.OS !== 'ios' && Platform.OS !== 'android';\nexport function tryJSONParse(string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (_) {\n    return string;\n  }\n}\nexport function tryJSONStringify(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (_) {\n    return null;\n  }\n}\nvar NO_REPLACEMENT = true;\nvar mapOfDeprecationReplacements = {\n  analytics: {\n    default: {\n      logEvent: 'logEvent()',\n      setAnalyticsCollectionEnabled: 'setAnalyticsCollectionEnabled()',\n      setSessionTimeoutDuration: 'setSessionTimeoutDuration()',\n      getAppInstanceId: 'getAppInstanceId()',\n      getSessionId: 'getSessionId()',\n      setUserId: 'setUserId()',\n      setUserProperty: 'setUserProperty()',\n      setUserProperties: 'setUserProperties()',\n      resetAnalyticsData: 'resetAnalyticsData()',\n      setDefaultEventParameters: 'setDefaultEventParameters()',\n      initiateOnDeviceConversionMeasurementWithEmailAddress: 'initiateOnDeviceConversionMeasurementWithEmailAddress()',\n      initiateOnDeviceConversionMeasurementWithHashedEmailAddress: 'initiateOnDeviceConversionMeasurementWithHashedEmailAddress()',\n      initiateOnDeviceConversionMeasurementWithPhoneNumber: 'initiateOnDeviceConversionMeasurementWithPhoneNumber()',\n      initiateOnDeviceConversionMeasurementWithHashedPhoneNumber: 'initiateOnDeviceConversionMeasurementWithHashedPhoneNumber()',\n      setConsent: 'setConsent()',\n      logAddPaymentInfo: 'logEvent()',\n      logScreenView: 'logEvent()',\n      logAddShippingInfo: 'logEvent()',\n      logAddToCart: 'logEvent()',\n      logAddToWishlist: 'logEvent()',\n      logAppOpen: 'logEvent()',\n      logBeginCheckout: 'logEvent()',\n      logCampaignDetails: 'logEvent()',\n      logEarnVirtualCurrency: 'logEvent()',\n      logGenerateLead: 'logEvent()',\n      logJoinGroup: 'logEvent()',\n      logLevelEnd: 'logEvent()',\n      logLevelStart: 'logEvent()',\n      logLevelUp: 'logEvent()',\n      logLogin: 'logEvent()',\n      logPostScore: 'logEvent()',\n      logSelectContent: 'logEvent()',\n      logPurchase: 'logEvent()',\n      logRefund: 'logEvent()',\n      logRemoveFromCart: 'logEvent()',\n      logSearch: 'logEvent()',\n      logSelectItem: 'logEvent()',\n      logSetCheckoutOption: 'logEvent()',\n      logSelectPromotion: 'logEvent()',\n      logShare: 'logEvent()',\n      logSignUp: 'logEvent()',\n      logSpendVirtualCurrency: 'logEvent()',\n      logTutorialBegin: 'logEvent()',\n      logTutorialComplete: 'logEvent()',\n      logUnlockAchievement: 'logEvent()',\n      logViewCart: 'logEvent()',\n      logViewItem: 'logEvent()',\n      logViewPromotion: 'logEvent()',\n      logViewSearchResults: 'logEvent()'\n    }\n  },\n  appCheck: {\n    default: {\n      activate: 'initializeAppCheck()',\n      setTokenAutoRefreshEnabled: 'setTokenAutoRefreshEnabled()',\n      getToken: 'getToken()',\n      getLimitedUseToken: 'getLimitedUseToken()',\n      onTokenChanged: 'onTokenChanged()'\n    },\n    statics: {\n      CustomProvider: 'CustomProvider'\n    }\n  },\n  appDistribution: {\n    default: {\n      isTesterSignedIn: 'isTesterSignedIn()',\n      signInTester: 'signInTester()',\n      checkForUpdate: 'checkForUpdate()',\n      signOutTester: 'signOutTester()'\n    }\n  },\n  auth: {\n    default: {\n      applyActionCode: 'applyActionCode()',\n      checkActionCode: 'checkActionCode()',\n      confirmPasswordReset: 'confirmPasswordReset()',\n      createUserWithEmailAndPassword: 'createUserWithEmailAndPassword()',\n      fetchSignInMethodsForEmail: 'fetchSignInMethodsForEmail()',\n      getMultiFactorResolver: 'getMultiFactorResolver()',\n      isSignInWithEmailLink: 'isSignInWithEmailLink()',\n      onAuthStateChanged: 'onAuthStateChanged()',\n      onIdTokenChanged: 'onIdTokenChanged()',\n      sendPasswordResetEmail: 'sendPasswordResetEmail()',\n      sendSignInLinkToEmail: 'sendSignInLinkToEmail()',\n      signInAnonymously: 'signInAnonymously()',\n      signInWithCredential: 'signInWithCredential()',\n      signInWithCustomToken: 'signInWithCustomToken()',\n      signInWithEmailAndPassword: 'signInWithEmailAndPassword()',\n      signInWithEmailLink: 'signInWithEmailLink()',\n      signInWithPhoneNumber: 'signInWithPhoneNumber()',\n      signInWithRedirect: 'signInWithRedirect()',\n      signInWithPopup: 'signInWithPopup()',\n      signOut: 'signOut()',\n      useUserAccessGroup: 'useUserAccessGroup()',\n      verifyPasswordResetCode: 'verifyPasswordResetCode()',\n      getCustomAuthDomain: 'getCustomAuthDomain()',\n      useEmulator: 'connectAuthEmulator()',\n      setLanguageCode: 'useDeviceLanguage()',\n      multiFactor: 'multiFactor()',\n      useDeviceLanguage: 'useDeviceLanguage()',\n      updateCurrentUser: 'updateCurrentUser()',\n      validatePassword: 'validatePassword()'\n    },\n    User: {\n      delete: 'deleteUser()',\n      getIdToken: 'getIdToken()',\n      getIdTokenResult: 'getIdTokenResult()',\n      linkWithCredential: 'linkWithCredential()',\n      linkWithPopup: 'linkWithPopup()',\n      linkWithRedirect: 'linkWithRedirect()',\n      reauthenticateWithCredential: 'reauthenticateWithCredential()',\n      reauthenticateWithPopup: 'reauthenticateWithPopup()',\n      reauthenticateWithRedirect: 'reauthenticateWithRedirect()',\n      reload: 'reload()',\n      sendEmailVerification: 'sendEmailVerification()',\n      toJSON: NO_REPLACEMENT,\n      unlink: 'unlink()',\n      updateEmail: 'updateEmail()',\n      updatePassword: 'updatePassword()',\n      updatePhoneNumber: 'updatePhoneNumber()',\n      updateProfile: 'updateProfile()',\n      verifyBeforeUpdateEmail: 'verifyBeforeUpdateEmail()'\n    },\n    statics: {\n      AppleAuthProvider: 'AppleAuthProvider',\n      EmailAuthProvider: 'EmailAuthProvider',\n      PhoneAuthProvider: 'PhoneAuthProvider',\n      GoogleAuthProvider: 'GoogleAuthProvider',\n      GithubAuthProvider: 'GithubAuthProvider',\n      TwitterAuthProvider: 'TwitterAuthProvider',\n      FacebookAuthProvider: 'FacebookAuthProvider',\n      PhoneMultiFactorGenerator: 'PhoneMultiFactorGenerator',\n      OAuthProvider: 'OAuthProvider',\n      OIDCAuthProvider: 'OIDCAuthProvider',\n      PhoneAuthState: 'PhoneAuthState',\n      getMultiFactorResolver: 'getMultiFactorResolver()',\n      multiFactor: 'multiFactor()'\n    }\n  },\n  crashlytics: {\n    default: {\n      checkForUnsentReports: 'checkForUnsentReports()',\n      crash: 'crash()',\n      deleteUnsentReports: 'deleteUnsentReports()',\n      didCrashOnPreviousExecution: 'didCrashOnPreviousExecution()',\n      log: 'log()',\n      setAttribute: 'setAttribute()',\n      setAttributes: 'setAttributes()',\n      setUserId: 'setUserId()',\n      recordError: 'recordError()',\n      sendUnsentReports: 'sendUnsentReports()',\n      setCrashlyticsCollectionEnabled: 'setCrashlyticsCollectionEnabled()'\n    }\n  },\n  firestore: {\n    default: {\n      batch: 'writeBatch()',\n      loadBundle: 'loadBundle()',\n      namedQuery: 'namedQuery()',\n      clearPersistence: 'clearIndexedDbPersistence()',\n      waitForPendingWrites: 'waitForPendingWrites()',\n      terminate: 'terminate()',\n      useEmulator: 'connectFirestoreEmulator()',\n      collection: 'collection()',\n      collectionGroup: 'collectionGroup()',\n      disableNetwork: 'disableNetwork()',\n      doc: 'doc()',\n      enableNetwork: 'enableNetwork()',\n      runTransaction: 'runTransaction()',\n      settings: 'settings()',\n      persistentCacheIndexManager: 'getPersistentCacheIndexManager()'\n    },\n    statics: {\n      setLogLevel: 'setLogLevel()',\n      Filter: 'where()',\n      FieldValue: 'FieldValue',\n      Timestamp: 'Timestamp',\n      GeoPoint: 'GeoPoint',\n      Blob: 'Bytes',\n      FieldPath: 'FieldPath'\n    },\n    FirestoreCollectionReference: {\n      count: 'getCountFromServer()',\n      countFromServer: 'getCountFromServer()',\n      endAt: 'endAt()',\n      endBefore: 'endBefore()',\n      get: 'getDocs()',\n      isEqual: NO_REPLACEMENT,\n      limit: 'limit()',\n      limitToLast: 'limitToLast()',\n      onSnapshot: 'onSnapshot()',\n      orderBy: 'orderBy()',\n      startAfter: 'startAfter()',\n      startAt: 'startAt()',\n      where: 'where()',\n      add: 'addDoc()',\n      doc: 'doc()'\n    },\n    FirestoreDocumentReference: {\n      collection: 'collection()',\n      delete: 'deleteDoc()',\n      get: 'getDoc()',\n      isEqual: NO_REPLACEMENT,\n      onSnapshot: 'onSnapshot()',\n      set: 'setDoc()',\n      update: 'updateDoc()'\n    },\n    FirestoreDocumentSnapshot: {\n      isEqual: NO_REPLACEMENT\n    },\n    FirestoreFieldValue: {\n      arrayRemove: 'arrayRemove()',\n      arrayUnion: 'arrayUnion()',\n      delete: 'deleteField()',\n      increment: 'increment()',\n      serverTimestamp: 'serverTimestamp()'\n    },\n    Filter: {\n      or: 'or()',\n      and: 'and()'\n    },\n    FirestorePersistentCacheIndexManager: {\n      enableIndexAutoCreation: 'enablePersistentCacheIndexAutoCreation()',\n      disableIndexAutoCreation: 'disablePersistentCacheIndexAutoCreation()',\n      deleteAllIndexes: 'deleteAllPersistentCacheIndexes()'\n    },\n    FirestoreTimestamp: {\n      seconds: NO_REPLACEMENT,\n      nanoseconds: NO_REPLACEMENT\n    }\n  },\n  functions: {\n    default: {\n      useEmulator: 'connectFirestoreEmulator()',\n      httpsCallable: 'httpsCallable()',\n      httpsCallableFromUrl: 'httpsCallableFromUrl()'\n    },\n    statics: {\n      HttpsErrorCode: 'HttpsErrorCode'\n    }\n  },\n  installations: {\n    default: {\n      delete: 'deleteInstallations()',\n      getId: 'getId()',\n      getToken: 'getToken()'\n    }\n  },\n  messaging: {\n    default: {\n      isAutoInitEnabled: 'isAutoInitEnabled()',\n      isDeviceRegisteredForRemoteMessages: 'isDeviceRegisteredForRemoteMessages()',\n      isNotificationDelegationEnabled: 'isNotificationDelegationEnabled()',\n      isDeliveryMetricsExportToBigQueryEnabled: 'isDeliveryMetricsExportToBigQueryEnabled()',\n      setAutoInitEnabled: 'setAutoInitEnabled()',\n      getInitialNotification: 'getInitialNotification()',\n      getDidOpenSettingsForNotification: 'getDidOpenSettingsForNotification()',\n      getIsHeadless: 'getIsHeadless()',\n      onNotificationOpenedApp: 'onNotificationOpenedApp()',\n      onTokenRefresh: 'onTokenRefresh()',\n      requestPermission: 'requestPermission()',\n      registerDeviceForRemoteMessages: 'registerDeviceForRemoteMessages()',\n      unregisterDeviceForRemoteMessages: 'unregisterDeviceForRemoteMessages()',\n      getAPNSToken: 'getAPNSToken()',\n      setAPNSToken: 'setAPNSToken()',\n      hasPermission: 'hasPermission()',\n      onDeletedMessages: 'onDeletedMessages()',\n      onMessageSent: 'onMessageSent()',\n      onSendError: 'onSendError()',\n      setBackgroundMessageHandler: 'setBackgroundMessageHandler()',\n      setOpenSettingsForNotificationsHandler: 'setOpenSettingsForNotificationsHandler()',\n      sendMessage: 'sendMessage()',\n      subscribeToTopic: 'subscribeToTopic()',\n      unsubscribeFromTopic: 'unsubscribeFromTopic()',\n      setNotificationDelegationEnabled: 'setNotificationDelegationEnabled()',\n      getToken: 'getToken()',\n      deleteToken: 'deleteToken()',\n      onMessage: 'onMessage()',\n      isSupported: 'isSupported()',\n      setDeliveryMetricsExportToBigQuery: 'experimentalSetDeliveryMetricsExportedToBigQueryEnabled()'\n    },\n    statics: {\n      AuthorizationStatus: 'AuthorizationStatus',\n      NotificationAndroidPriority: 'NotificationAndroidPriority',\n      NotificationAndroidVisibility: 'NotificationAndroidVisibility'\n    }\n  },\n  perf: {\n    default: {\n      setPerformanceCollectionEnabled: 'initializePerformance()',\n      newTrace: 'trace()',\n      newHttpMetric: 'httpMetric()',\n      newScreenTrace: 'newScreenTrace()',\n      startScreenTrace: 'startScreenTrace()'\n    }\n  },\n  remoteConfig: {\n    default: {\n      activate: 'activate()',\n      ensureInitialized: 'ensureInitialized()',\n      fetchAndActivate: 'fetchAndActivate()',\n      getAll: 'getAll()',\n      getBoolean: 'getBoolean()',\n      getNumber: 'getNumber()',\n      getString: 'getString()',\n      getValue: 'getValue()',\n      reset: 'reset()',\n      setConfigSettings: 'setConfigSettings()',\n      fetch: 'fetch()',\n      setDefaults: 'setDefaults()',\n      setDefaultsFromResource: 'setDefaultsFromResource()',\n      onConfigUpdated: 'onConfigUpdated()'\n    },\n    statics: {\n      LastFetchStatus: 'LastFetchStatus',\n      ValueSource: 'ValueSource'\n    }\n  },\n  storage: {\n    default: {\n      useEmulator: 'connectStorageEmulator()',\n      ref: 'ref()',\n      refFromURL: 'refFromURL()',\n      setMaxOperationRetryTime: 'setMaxOperationRetryTime()',\n      setMaxUploadRetryTime: 'setMaxUploadRetryTime()',\n      setMaxDownloadRetryTime: 'setMaxDownloadRetryTime()'\n    },\n    StorageReference: {\n      delete: 'deleteObject()',\n      getDownloadURL: 'getDownloadURL()',\n      getMetadata: 'getMetadata()',\n      list: 'list()',\n      listAll: 'listAll()',\n      updateMetadata: 'updateMetadata()',\n      put: 'uploadBytesResumable()',\n      putString: 'uploadString()',\n      putFile: 'putFile()',\n      writeToFile: 'writeToFile()',\n      toString: 'toString()',\n      child: 'child()'\n    },\n    statics: {\n      StringFormat: 'StringFormat',\n      TaskEvent: 'TaskEvent',\n      TaskState: 'TaskState'\n    }\n  }\n};\nvar modularDeprecationMessage = 'This method is deprecated (as well as all React Native Firebase namespaced API) and will be removed in the next major release ' + 'as part of move to match Firebase Web modular SDK API. Please see migration guide for more details: https://rnfirebase.io/migrating-to-v22';\nexport function deprecationConsoleWarning(nameSpace, methodName, instanceName, isModularMethod) {\n  if (!isModularMethod) {\n    var moduleMap = mapOfDeprecationReplacements[nameSpace];\n    if (moduleMap) {\n      var instanceMap = moduleMap[instanceName];\n      var deprecatedMethod = instanceMap[methodName];\n      if (instanceMap && deprecatedMethod) {\n        if (!globalThis.RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS) {\n          console.warn(createMessage(nameSpace, methodName, instanceName));\n          if (globalThis.RNFB_MODULAR_DEPRECATION_STRICT_MODE === true) {\n            throw new Error('Deprecated API usage detected while in strict mode.');\n          }\n        }\n      }\n    }\n  }\n}\nexport function createMessage(nameSpace, methodName) {\n  var instanceName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'default';\n  var uniqueMessage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  if (uniqueMessage) {\n    return uniqueMessage;\n  }\n  var moduleMap = mapOfDeprecationReplacements[nameSpace];\n  if (moduleMap) {\n    var instance = moduleMap[instanceName];\n    if (instance) {\n      var replacementMethodName = instance[methodName];\n      if (replacementMethodName !== NO_REPLACEMENT) {\n        return modularDeprecationMessage + `. Method called was \\`${methodName}\\`. Please use \\`${replacementMethodName}\\` instead.`;\n      } else {\n        return modularDeprecationMessage + `. Method called was \\`${methodName}\\``;\n      }\n    }\n  }\n}\nfunction getNamespace(target) {\n  if (target.GeoPoint || target.CustomProvider) {\n    return 'firestore';\n  }\n  if (target._config && target._config.namespace) {\n    return target._config.namespace;\n  }\n  if (target.constructor.name === 'StorageReference') {\n    return 'storage';\n  }\n  var className = target.name ? target.name : target.constructor.name;\n  return Object.keys(mapOfDeprecationReplacements).find(function (key) {\n    if (mapOfDeprecationReplacements[key][className]) {\n      return key;\n    }\n  });\n}\nfunction getInstanceName(target) {\n  if (target.GeoPoint || target.CustomProvider) {\n    return 'statics';\n  }\n  if (target._config) {\n    return 'default';\n  }\n  if (target.constructor.name === 'StorageReference') {\n    return target.constructor.name;\n  }\n  if (target.name) {\n    return target.name;\n  }\n  return target.constructor.name;\n}\nexport function createDeprecationProxy(instance) {\n  return new Proxy(instance, {\n    construct: function construct(target, args) {\n      return createDeprecationProxy(_construct(target, _toConsumableArray(args)));\n    },\n    get: function get(target, prop, receiver) {\n      var originalMethod = target[prop];\n      if (prop === 'constructor') {\n        return Reflect.get(target, prop, receiver);\n      }\n      if (target && target.constructor && target.constructor.name === 'FirestoreTimestamp') {\n        deprecationConsoleWarning('firestore', prop, 'FirestoreTimestamp', false);\n        return Reflect.get(target, prop, receiver);\n      }\n      if (target && target.name === 'firebaseModuleWithApp') {\n        if (prop === 'Filter' || prop === 'FieldValue' || prop === 'Timestamp' || prop === 'GeoPoint' || prop === 'Blob' || prop === 'FieldPath') {\n          deprecationConsoleWarning('firestore', prop, 'statics', false);\n        }\n        if (prop === 'LastFetchStatus' || prop === 'ValueSource') {\n          deprecationConsoleWarning('remoteConfig', prop, 'statics', false);\n        }\n        if (prop === 'CustomProvider') {\n          deprecationConsoleWarning('appCheck', prop, 'statics', false);\n        }\n        if (prop === 'StringFormat' || prop === 'TaskEvent' || prop === 'TaskState') {\n          deprecationConsoleWarning('storage', prop, 'statics', false);\n        }\n        if (prop === 'PhoneAuthState' || prop === 'AppleAuthProvider' || prop === 'PhoneAuthProvider' || prop === 'GoogleAuthProvider' || prop === 'GithubAuthProvider' || prop === 'TwitterAuthProvider' || prop === 'FacebookAuthProvider' || prop === 'OAuthProvider' || prop === 'OIDCAuthProvider' || prop === 'PhoneMultiFactorGenerator' || prop === 'EmailAuthProvider' || prop === 'multiFactor' || prop === 'getMultiFactorResolver') {\n          deprecationConsoleWarning('auth', prop, 'statics', false);\n        }\n        if (prop === 'AuthorizationStatus' || prop === 'NotificationAndroidPriority' || prop === 'NotificationAndroidVisibility') {\n          deprecationConsoleWarning('messaging', prop, 'statics', false);\n        }\n        if (prop !== 'setLogLevel') {\n          return Reflect.get(target, prop, receiver);\n        }\n      }\n      var descriptor = Object.getOwnPropertyDescriptor(target, prop) || Object.getOwnPropertyDescriptor(Object.getPrototypeOf(target), prop);\n      if (descriptor && (descriptor.get || descriptor.set)) {\n        var instanceName = getInstanceName(target);\n        var nameSpace = getNamespace(target);\n        if (descriptor.get) {\n          deprecationConsoleWarning(nameSpace, prop, instanceName, _isModularCall);\n          return descriptor.get.call(target);\n        }\n        if (descriptor.set) {\n          return function (value) {\n            deprecationConsoleWarning(nameSpace, prop, instanceName, _isModularCall);\n            descriptor.set.call(target, value);\n          };\n        }\n      }\n      if (typeof originalMethod === 'function') {\n        return function () {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          var isModularMethod = args.includes(MODULAR_DEPRECATION_ARG);\n          var instanceName = getInstanceName(target);\n          var nameSpace = getNamespace(target);\n          deprecationConsoleWarning(nameSpace, prop, instanceName, isModularMethod);\n          return originalMethod.apply(target, filterModularArgument(args));\n        };\n      }\n      return Reflect.get(target, prop, receiver);\n    }\n  });\n}\nexport var MODULAR_DEPRECATION_ARG = 'react-native-firebase-modular-method-call';\nvar _isModularCall = false;\nexport function withModularFlag(fn) {\n  var previousFlag = _isModularCall;\n  _isModularCall = true;\n  try {\n    return fn();\n  } finally {\n    _isModularCall = previousFlag;\n  }\n}\nexport function filterModularArgument(list) {\n  return list.filter(function (arg) {\n    return arg !== MODULAR_DEPRECATION_ARG;\n  });\n}\nexport function warnIfNotModularCall(args) {\n  var replacementMethodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  for (var i = 0; i < args.length; i++) {\n    if (args[i] === MODULAR_DEPRECATION_ARG) {\n      return;\n    }\n  }\n  var message = modularDeprecationMessage;\n  if (replacementMethodName.length > 0) {\n    message += ` Please use \\`${replacementMethodName}\\` instead.`;\n  }\n  if (!globalThis.RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS) {\n    console.warn(message);\n    if (globalThis.RNFB_MODULAR_DEPRECATION_STRICT_MODE === true) {\n      throw new Error('Deprecated API usage detected while in strict mode.');\n    }\n  }\n}","map":{"version":3,"names":["Base64","isString","default","ReferenceBase","getDataUrlParts","dataUrlString","isBase64","includes","_dataUrlString$split","split","_dataUrlString$split2","_slicedToArray","mediaType","base64String","undefined","replace","decodeURIComponent","btoa","once","fn","context","onceResult","ranOnce","onceInner","_len","arguments","length","args","Array","_key","apply","isError","value","Object","prototype","toString","call","Error","hasOwnProperty","target","property","stripTrailingSlash","string","endsWith","slice","isIOS","Platform","OS","isAndroid","isOther","tryJSONParse","JSON","parse","_","tryJSONStringify","data","stringify","NO_REPLACEMENT","mapOfDeprecationReplacements","analytics","logEvent","setAnalyticsCollectionEnabled","setSessionTimeoutDuration","getAppInstanceId","getSessionId","setUserId","setUserProperty","setUserProperties","resetAnalyticsData","setDefaultEventParameters","initiateOnDeviceConversionMeasurementWithEmailAddress","initiateOnDeviceConversionMeasurementWithHashedEmailAddress","initiateOnDeviceConversionMeasurementWithPhoneNumber","initiateOnDeviceConversionMeasurementWithHashedPhoneNumber","setConsent","logAddPaymentInfo","logScreenView","logAddShippingInfo","logAddToCart","logAddToWishlist","logAppOpen","logBeginCheckout","logCampaignDetails","logEarnVirtualCurrency","logGenerateLead","logJoinGroup","logLevelEnd","logLevelStart","logLevelUp","logLogin","logPostScore","logSelectContent","logPurchase","logRefund","logRemoveFromCart","logSearch","logSelectItem","logSetCheckoutOption","logSelectPromotion","logShare","logSignUp","logSpendVirtualCurrency","logTutorialBegin","logTutorialComplete","logUnlockAchievement","logViewCart","logViewItem","logViewPromotion","logViewSearchResults","appCheck","activate","setTokenAutoRefreshEnabled","getToken","getLimitedUseToken","onTokenChanged","statics","CustomProvider","appDistribution","isTesterSignedIn","signInTester","checkForUpdate","signOutTester","auth","applyActionCode","checkActionCode","confirmPasswordReset","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","getMultiFactorResolver","isSignInWithEmailLink","onAuthStateChanged","onIdTokenChanged","sendPasswordResetEmail","sendSignInLinkToEmail","signInAnonymously","signInWithCredential","signInWithCustomToken","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","signInWithRedirect","signInWithPopup","signOut","useUserAccessGroup","verifyPasswordResetCode","getCustomAuthDomain","useEmulator","setLanguageCode","multiFactor","useDeviceLanguage","updateCurrentUser","validatePassword","User","delete","getIdToken","getIdTokenResult","linkWithCredential","linkWithPopup","linkWithRedirect","reauthenticateWithCredential","reauthenticateWithPopup","reauthenticateWithRedirect","reload","sendEmailVerification","toJSON","unlink","updateEmail","updatePassword","updatePhoneNumber","updateProfile","verifyBeforeUpdateEmail","AppleAuthProvider","EmailAuthProvider","PhoneAuthProvider","GoogleAuthProvider","GithubAuthProvider","TwitterAuthProvider","FacebookAuthProvider","PhoneMultiFactorGenerator","OAuthProvider","OIDCAuthProvider","PhoneAuthState","crashlytics","checkForUnsentReports","crash","deleteUnsentReports","didCrashOnPreviousExecution","log","setAttribute","setAttributes","recordError","sendUnsentReports","setCrashlyticsCollectionEnabled","firestore","batch","loadBundle","namedQuery","clearPersistence","waitForPendingWrites","terminate","collection","collectionGroup","disableNetwork","doc","enableNetwork","runTransaction","settings","persistentCacheIndexManager","setLogLevel","Filter","FieldValue","Timestamp","GeoPoint","Blob","FieldPath","FirestoreCollectionReference","count","countFromServer","endAt","endBefore","get","isEqual","limit","limitToLast","onSnapshot","orderBy","startAfter","startAt","where","add","FirestoreDocumentReference","set","update","FirestoreDocumentSnapshot","FirestoreFieldValue","arrayRemove","arrayUnion","increment","serverTimestamp","or","and","FirestorePersistentCacheIndexManager","enableIndexAutoCreation","disableIndexAutoCreation","deleteAllIndexes","FirestoreTimestamp","seconds","nanoseconds","functions","httpsCallable","httpsCallableFromUrl","HttpsErrorCode","installations","getId","messaging","isAutoInitEnabled","isDeviceRegisteredForRemoteMessages","isNotificationDelegationEnabled","isDeliveryMetricsExportToBigQueryEnabled","setAutoInitEnabled","getInitialNotification","getDidOpenSettingsForNotification","getIsHeadless","onNotificationOpenedApp","onTokenRefresh","requestPermission","registerDeviceForRemoteMessages","unregisterDeviceForRemoteMessages","getAPNSToken","setAPNSToken","hasPermission","onDeletedMessages","onMessageSent","onSendError","setBackgroundMessageHandler","setOpenSettingsForNotificationsHandler","sendMessage","subscribeToTopic","unsubscribeFromTopic","setNotificationDelegationEnabled","deleteToken","onMessage","isSupported","setDeliveryMetricsExportToBigQuery","AuthorizationStatus","NotificationAndroidPriority","NotificationAndroidVisibility","perf","setPerformanceCollectionEnabled","newTrace","newHttpMetric","newScreenTrace","startScreenTrace","remoteConfig","ensureInitialized","fetchAndActivate","getAll","getBoolean","getNumber","getString","getValue","reset","setConfigSettings","fetch","setDefaults","setDefaultsFromResource","onConfigUpdated","LastFetchStatus","ValueSource","storage","ref","refFromURL","setMaxOperationRetryTime","setMaxUploadRetryTime","setMaxDownloadRetryTime","StorageReference","getDownloadURL","getMetadata","list","listAll","updateMetadata","put","putString","putFile","writeToFile","child","StringFormat","TaskEvent","TaskState","modularDeprecationMessage","deprecationConsoleWarning","nameSpace","methodName","instanceName","isModularMethod","moduleMap","instanceMap","deprecatedMethod","globalThis","RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS","console","warn","createMessage","RNFB_MODULAR_DEPRECATION_STRICT_MODE","uniqueMessage","instance","replacementMethodName","getNamespace","_config","namespace","constructor","name","className","keys","find","key","getInstanceName","createDeprecationProxy","Proxy","construct","_construct","_toConsumableArray","prop","receiver","originalMethod","Reflect","descriptor","getOwnPropertyDescriptor","getPrototypeOf","_isModularCall","_len2","_key2","MODULAR_DEPRECATION_ARG","filterModularArgument","withModularFlag","previousFlag","filter","arg","warnIfNotModularCall","i","message"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/node_modules/@react-native-firebase/app/lib/common/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Platform } from 'react-native';\nimport Base64 from './Base64';\nimport { isString } from './validate';\n\nexport * from './id';\nexport * from './path';\nexport * from './promise';\nexport * from './validate';\n\nexport { default as Base64 } from './Base64';\nexport { default as ReferenceBase } from './ReferenceBase';\n\nexport function getDataUrlParts(dataUrlString) {\n  const isBase64 = dataUrlString.includes(';base64');\n  let [mediaType, base64String] = dataUrlString.split(',');\n  if (!mediaType || !base64String) {\n    return { base64String: undefined, mediaType: undefined };\n  }\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n  return { base64String, mediaType };\n}\n\nexport function once(fn, context) {\n  let onceResult;\n  let ranOnce = false;\n\n  return function onceInner(...args) {\n    if (!ranOnce) {\n      ranOnce = true;\n      onceResult = fn.apply(context || this, args);\n    }\n\n    return onceResult;\n  };\n}\n\nexport function isError(value) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n\n  return value instanceof Error;\n}\n\nexport function hasOwnProperty(target, property) {\n  return Object.hasOwnProperty.call(target, property);\n}\n\n/**\n * Remove a trailing forward slash from a string if it exists\n *\n * @param string\n * @returns {*}\n */\nexport function stripTrailingSlash(string) {\n  if (!isString(string)) {\n    return string;\n  }\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\n\nexport const isIOS = Platform.OS === 'ios';\n\nexport const isAndroid = Platform.OS === 'android';\n\nexport const isOther = Platform.OS !== 'ios' && Platform.OS !== 'android';\n\nexport function tryJSONParse(string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (_) {\n    return string;\n  }\n}\n\nexport function tryJSONStringify(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (_) {\n    return null;\n  }\n}\n\n// Used to indicate if there is no corresponding modular function\nconst NO_REPLACEMENT = true;\n\nconst mapOfDeprecationReplacements = {\n  analytics: {\n    default: {\n      logEvent: 'logEvent()',\n      setAnalyticsCollectionEnabled: 'setAnalyticsCollectionEnabled()',\n      setSessionTimeoutDuration: 'setSessionTimeoutDuration()',\n      getAppInstanceId: 'getAppInstanceId()',\n      getSessionId: 'getSessionId()',\n      setUserId: 'setUserId()',\n      setUserProperty: 'setUserProperty()',\n      setUserProperties: 'setUserProperties()',\n      resetAnalyticsData: 'resetAnalyticsData()',\n      setDefaultEventParameters: 'setDefaultEventParameters()',\n      initiateOnDeviceConversionMeasurementWithEmailAddress:\n        'initiateOnDeviceConversionMeasurementWithEmailAddress()',\n      initiateOnDeviceConversionMeasurementWithHashedEmailAddress:\n        'initiateOnDeviceConversionMeasurementWithHashedEmailAddress()',\n      initiateOnDeviceConversionMeasurementWithPhoneNumber:\n        'initiateOnDeviceConversionMeasurementWithPhoneNumber()',\n      initiateOnDeviceConversionMeasurementWithHashedPhoneNumber:\n        'initiateOnDeviceConversionMeasurementWithHashedPhoneNumber()',\n      setConsent: 'setConsent()',\n      // We're deprecating all helper methods for event. e.g. `logAddPaymentInfo()` from namespaced and modular.\n      logAddPaymentInfo: 'logEvent()',\n      logScreenView: 'logEvent()',\n      logAddShippingInfo: 'logEvent()',\n      logAddToCart: 'logEvent()',\n      logAddToWishlist: 'logEvent()',\n      logAppOpen: 'logEvent()',\n      logBeginCheckout: 'logEvent()',\n      logCampaignDetails: 'logEvent()',\n      logEarnVirtualCurrency: 'logEvent()',\n      logGenerateLead: 'logEvent()',\n      logJoinGroup: 'logEvent()',\n      logLevelEnd: 'logEvent()',\n      logLevelStart: 'logEvent()',\n      logLevelUp: 'logEvent()',\n      logLogin: 'logEvent()',\n      logPostScore: 'logEvent()',\n      logSelectContent: 'logEvent()',\n      logPurchase: 'logEvent()',\n      logRefund: 'logEvent()',\n      logRemoveFromCart: 'logEvent()',\n      logSearch: 'logEvent()',\n      logSelectItem: 'logEvent()',\n      logSetCheckoutOption: 'logEvent()',\n      logSelectPromotion: 'logEvent()',\n      logShare: 'logEvent()',\n      logSignUp: 'logEvent()',\n      logSpendVirtualCurrency: 'logEvent()',\n      logTutorialBegin: 'logEvent()',\n      logTutorialComplete: 'logEvent()',\n      logUnlockAchievement: 'logEvent()',\n      logViewCart: 'logEvent()',\n      logViewItem: 'logEvent()',\n      logViewPromotion: 'logEvent()',\n      logViewSearchResults: 'logEvent()',\n    },\n  },\n  appCheck: {\n    default: {\n      activate: 'initializeAppCheck()',\n      setTokenAutoRefreshEnabled: 'setTokenAutoRefreshEnabled()',\n      getToken: 'getToken()',\n      getLimitedUseToken: 'getLimitedUseToken()',\n      onTokenChanged: 'onTokenChanged()',\n    },\n    statics: {\n      CustomProvider: 'CustomProvider',\n    },\n  },\n  appDistribution: {\n    default: {\n      isTesterSignedIn: 'isTesterSignedIn()',\n      signInTester: 'signInTester()',\n      checkForUpdate: 'checkForUpdate()',\n      signOutTester: 'signOutTester()',\n    },\n  },\n  auth: {\n    default: {\n      applyActionCode: 'applyActionCode()',\n      checkActionCode: 'checkActionCode()',\n      confirmPasswordReset: 'confirmPasswordReset()',\n      createUserWithEmailAndPassword: 'createUserWithEmailAndPassword()',\n      fetchSignInMethodsForEmail: 'fetchSignInMethodsForEmail()',\n      getMultiFactorResolver: 'getMultiFactorResolver()',\n      isSignInWithEmailLink: 'isSignInWithEmailLink()',\n      onAuthStateChanged: 'onAuthStateChanged()',\n      onIdTokenChanged: 'onIdTokenChanged()',\n      sendPasswordResetEmail: 'sendPasswordResetEmail()',\n      sendSignInLinkToEmail: 'sendSignInLinkToEmail()',\n      signInAnonymously: 'signInAnonymously()',\n      signInWithCredential: 'signInWithCredential()',\n      signInWithCustomToken: 'signInWithCustomToken()',\n      signInWithEmailAndPassword: 'signInWithEmailAndPassword()',\n      signInWithEmailLink: 'signInWithEmailLink()',\n      signInWithPhoneNumber: 'signInWithPhoneNumber()',\n      signInWithRedirect: 'signInWithRedirect()',\n      signInWithPopup: 'signInWithPopup()',\n      signOut: 'signOut()',\n      useUserAccessGroup: 'useUserAccessGroup()',\n      verifyPasswordResetCode: 'verifyPasswordResetCode()',\n      getCustomAuthDomain: 'getCustomAuthDomain()',\n      useEmulator: 'connectAuthEmulator()',\n      setLanguageCode: 'useDeviceLanguage()',\n      multiFactor: 'multiFactor()',\n      useDeviceLanguage: 'useDeviceLanguage()',\n      updateCurrentUser: 'updateCurrentUser()',\n      validatePassword: 'validatePassword()',\n    },\n    User: {\n      delete: 'deleteUser()',\n      getIdToken: 'getIdToken()',\n      getIdTokenResult: 'getIdTokenResult()',\n      linkWithCredential: 'linkWithCredential()',\n      linkWithPopup: 'linkWithPopup()',\n      linkWithRedirect: 'linkWithRedirect()',\n      reauthenticateWithCredential: 'reauthenticateWithCredential()',\n      reauthenticateWithPopup: 'reauthenticateWithPopup()',\n      reauthenticateWithRedirect: 'reauthenticateWithRedirect()',\n      reload: 'reload()',\n      sendEmailVerification: 'sendEmailVerification()',\n      toJSON: NO_REPLACEMENT,\n      unlink: 'unlink()',\n      updateEmail: 'updateEmail()',\n      updatePassword: 'updatePassword()',\n      updatePhoneNumber: 'updatePhoneNumber()',\n      updateProfile: 'updateProfile()',\n      verifyBeforeUpdateEmail: 'verifyBeforeUpdateEmail()',\n    },\n    statics: {\n      AppleAuthProvider: 'AppleAuthProvider',\n      EmailAuthProvider: 'EmailAuthProvider',\n      PhoneAuthProvider: 'PhoneAuthProvider',\n      GoogleAuthProvider: 'GoogleAuthProvider',\n      GithubAuthProvider: 'GithubAuthProvider',\n      TwitterAuthProvider: 'TwitterAuthProvider',\n      FacebookAuthProvider: 'FacebookAuthProvider',\n      PhoneMultiFactorGenerator: 'PhoneMultiFactorGenerator',\n      OAuthProvider: 'OAuthProvider',\n      OIDCAuthProvider: 'OIDCAuthProvider',\n      PhoneAuthState: 'PhoneAuthState',\n      getMultiFactorResolver: 'getMultiFactorResolver()',\n      multiFactor: 'multiFactor()',\n    },\n  },\n  crashlytics: {\n    default: {\n      checkForUnsentReports: 'checkForUnsentReports()',\n      crash: 'crash()',\n      deleteUnsentReports: 'deleteUnsentReports()',\n      didCrashOnPreviousExecution: 'didCrashOnPreviousExecution()',\n      log: 'log()',\n      setAttribute: 'setAttribute()',\n      setAttributes: 'setAttributes()',\n      setUserId: 'setUserId()',\n      recordError: 'recordError()',\n      sendUnsentReports: 'sendUnsentReports()',\n      setCrashlyticsCollectionEnabled: 'setCrashlyticsCollectionEnabled()',\n    },\n  },\n  firestore: {\n    default: {\n      batch: 'writeBatch()',\n      loadBundle: 'loadBundle()',\n      namedQuery: 'namedQuery()',\n      clearPersistence: 'clearIndexedDbPersistence()',\n      waitForPendingWrites: 'waitForPendingWrites()',\n      terminate: 'terminate()',\n      useEmulator: 'connectFirestoreEmulator()',\n      collection: 'collection()',\n      collectionGroup: 'collectionGroup()',\n      disableNetwork: 'disableNetwork()',\n      doc: 'doc()',\n      enableNetwork: 'enableNetwork()',\n      runTransaction: 'runTransaction()',\n      settings: 'settings()',\n      persistentCacheIndexManager: 'getPersistentCacheIndexManager()',\n    },\n    statics: {\n      setLogLevel: 'setLogLevel()',\n      Filter: 'where()',\n      FieldValue: 'FieldValue',\n      Timestamp: 'Timestamp',\n      GeoPoint: 'GeoPoint',\n      Blob: 'Bytes',\n      FieldPath: 'FieldPath',\n    },\n    FirestoreCollectionReference: {\n      count: 'getCountFromServer()',\n      countFromServer: 'getCountFromServer()',\n      endAt: 'endAt()',\n      endBefore: 'endBefore()',\n      get: 'getDocs()',\n      isEqual: NO_REPLACEMENT,\n      limit: 'limit()',\n      limitToLast: 'limitToLast()',\n      onSnapshot: 'onSnapshot()',\n      orderBy: 'orderBy()',\n      startAfter: 'startAfter()',\n      startAt: 'startAt()',\n      where: 'where()',\n      add: 'addDoc()',\n      doc: 'doc()',\n    },\n    FirestoreDocumentReference: {\n      collection: 'collection()',\n      delete: 'deleteDoc()',\n      get: 'getDoc()',\n      isEqual: NO_REPLACEMENT,\n      onSnapshot: 'onSnapshot()',\n      set: 'setDoc()',\n      update: 'updateDoc()',\n    },\n    FirestoreDocumentSnapshot: {\n      isEqual: NO_REPLACEMENT,\n    },\n    FirestoreFieldValue: {\n      arrayRemove: 'arrayRemove()',\n      arrayUnion: 'arrayUnion()',\n      delete: 'deleteField()',\n      increment: 'increment()',\n      serverTimestamp: 'serverTimestamp()',\n    },\n    Filter: {\n      or: 'or()',\n      and: 'and()',\n    },\n    FirestorePersistentCacheIndexManager: {\n      enableIndexAutoCreation: 'enablePersistentCacheIndexAutoCreation()',\n      disableIndexAutoCreation: 'disablePersistentCacheIndexAutoCreation()',\n      deleteAllIndexes: 'deleteAllPersistentCacheIndexes()',\n    },\n    FirestoreTimestamp: {\n      seconds: NO_REPLACEMENT,\n      nanoseconds: NO_REPLACEMENT,\n    },\n  },\n  functions: {\n    default: {\n      useEmulator: 'connectFirestoreEmulator()',\n      httpsCallable: 'httpsCallable()',\n      httpsCallableFromUrl: 'httpsCallableFromUrl()',\n    },\n    statics: {\n      HttpsErrorCode: 'HttpsErrorCode',\n    },\n  },\n  installations: {\n    default: {\n      delete: 'deleteInstallations()',\n      getId: 'getId()',\n      getToken: 'getToken()',\n    },\n  },\n  messaging: {\n    default: {\n      isAutoInitEnabled: 'isAutoInitEnabled()',\n      isDeviceRegisteredForRemoteMessages: 'isDeviceRegisteredForRemoteMessages()',\n      isNotificationDelegationEnabled: 'isNotificationDelegationEnabled()',\n      isDeliveryMetricsExportToBigQueryEnabled: 'isDeliveryMetricsExportToBigQueryEnabled()',\n      setAutoInitEnabled: 'setAutoInitEnabled()',\n      getInitialNotification: 'getInitialNotification()',\n      getDidOpenSettingsForNotification: 'getDidOpenSettingsForNotification()',\n      getIsHeadless: 'getIsHeadless()',\n      onNotificationOpenedApp: 'onNotificationOpenedApp()',\n      onTokenRefresh: 'onTokenRefresh()',\n      requestPermission: 'requestPermission()',\n      registerDeviceForRemoteMessages: 'registerDeviceForRemoteMessages()',\n      unregisterDeviceForRemoteMessages: 'unregisterDeviceForRemoteMessages()',\n      getAPNSToken: 'getAPNSToken()',\n      setAPNSToken: 'setAPNSToken()',\n      hasPermission: 'hasPermission()',\n      onDeletedMessages: 'onDeletedMessages()',\n      onMessageSent: 'onMessageSent()',\n      onSendError: 'onSendError()',\n      setBackgroundMessageHandler: 'setBackgroundMessageHandler()',\n      setOpenSettingsForNotificationsHandler: 'setOpenSettingsForNotificationsHandler()',\n      sendMessage: 'sendMessage()',\n      subscribeToTopic: 'subscribeToTopic()',\n      unsubscribeFromTopic: 'unsubscribeFromTopic()',\n      setNotificationDelegationEnabled: 'setNotificationDelegationEnabled()',\n      // Actual firebase-js-sdk methods\n      getToken: 'getToken()',\n      deleteToken: 'deleteToken()',\n      onMessage: 'onMessage()',\n      isSupported: 'isSupported()',\n      setDeliveryMetricsExportToBigQuery:\n        'experimentalSetDeliveryMetricsExportedToBigQueryEnabled()',\n    },\n    statics: {\n      AuthorizationStatus: 'AuthorizationStatus',\n      NotificationAndroidPriority: 'NotificationAndroidPriority',\n      NotificationAndroidVisibility: 'NotificationAndroidVisibility',\n    },\n  },\n  perf: {\n    default: {\n      setPerformanceCollectionEnabled: 'initializePerformance()',\n      newTrace: 'trace()',\n      newHttpMetric: 'httpMetric()',\n      newScreenTrace: 'newScreenTrace()',\n      startScreenTrace: 'startScreenTrace()',\n    },\n  },\n  remoteConfig: {\n    default: {\n      activate: 'activate()',\n      ensureInitialized: 'ensureInitialized()',\n      fetchAndActivate: 'fetchAndActivate()',\n      getAll: 'getAll()',\n      getBoolean: 'getBoolean()',\n      getNumber: 'getNumber()',\n      getString: 'getString()',\n      getValue: 'getValue()',\n      reset: 'reset()',\n      setConfigSettings: 'setConfigSettings()',\n      fetch: 'fetch()',\n      setDefaults: 'setDefaults()',\n      setDefaultsFromResource: 'setDefaultsFromResource()',\n      onConfigUpdated: 'onConfigUpdated()',\n    },\n    statics: {\n      LastFetchStatus: 'LastFetchStatus',\n      ValueSource: 'ValueSource',\n    },\n  },\n  storage: {\n    default: {\n      useEmulator: 'connectStorageEmulator()',\n      ref: 'ref()',\n      refFromURL: 'refFromURL()',\n      setMaxOperationRetryTime: 'setMaxOperationRetryTime()',\n      setMaxUploadRetryTime: 'setMaxUploadRetryTime()',\n      setMaxDownloadRetryTime: 'setMaxDownloadRetryTime()',\n    },\n    StorageReference: {\n      delete: 'deleteObject()',\n      getDownloadURL: 'getDownloadURL()',\n      getMetadata: 'getMetadata()',\n      list: 'list()',\n      listAll: 'listAll()',\n      updateMetadata: 'updateMetadata()',\n      put: 'uploadBytesResumable()',\n      putString: 'uploadString()',\n      putFile: 'putFile()',\n      writeToFile: 'writeToFile()',\n      toString: 'toString()',\n      child: 'child()',\n    },\n    statics: {\n      StringFormat: 'StringFormat',\n      TaskEvent: 'TaskEvent',\n      TaskState: 'TaskState',\n    },\n  },\n};\n\nconst modularDeprecationMessage =\n  'This method is deprecated (as well as all React Native Firebase namespaced API) and will be removed in the next major release ' +\n  'as part of move to match Firebase Web modular SDK API. Please see migration guide for more details: https://rnfirebase.io/migrating-to-v22';\n\nexport function deprecationConsoleWarning(nameSpace, methodName, instanceName, isModularMethod) {\n  if (!isModularMethod) {\n    const moduleMap = mapOfDeprecationReplacements[nameSpace];\n    if (moduleMap) {\n      const instanceMap = moduleMap[instanceName];\n      const deprecatedMethod = instanceMap[methodName];\n      if (instanceMap && deprecatedMethod) {\n        if (!globalThis.RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS) {\n          // eslint-disable-next-line no-console\n          console.warn(createMessage(nameSpace, methodName, instanceName));\n\n          if (globalThis.RNFB_MODULAR_DEPRECATION_STRICT_MODE === true) {\n            throw new Error('Deprecated API usage detected while in strict mode.');\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function createMessage(\n  nameSpace,\n  methodName,\n  instanceName = 'default',\n  uniqueMessage = null,\n) {\n  if (uniqueMessage) {\n    // Unique deprecation message used for testing\n    return uniqueMessage;\n  }\n\n  const moduleMap = mapOfDeprecationReplacements[nameSpace];\n  if (moduleMap) {\n    const instance = moduleMap[instanceName];\n    if (instance) {\n      const replacementMethodName = instance[methodName];\n\n      if (replacementMethodName !== NO_REPLACEMENT) {\n        return (\n          modularDeprecationMessage +\n          `. Method called was \\`${methodName}\\`. Please use \\`${replacementMethodName}\\` instead.`\n        );\n      } else {\n        return modularDeprecationMessage + `. Method called was \\`${methodName}\\``;\n      }\n    }\n  }\n}\n\nfunction getNamespace(target) {\n  if (target.GeoPoint || target.CustomProvider) {\n    // target is statics object. GeoPoint - Firestore, CustomProvider - AppCheck\n    return 'firestore';\n  }\n  if (target._config && target._config.namespace) {\n    return target._config.namespace;\n  }\n  if (target.constructor.name === 'StorageReference') {\n    return 'storage';\n  }\n\n  const className = target.name ? target.name : target.constructor.name;\n  return Object.keys(mapOfDeprecationReplacements).find(key => {\n    if (mapOfDeprecationReplacements[key][className]) {\n      return key;\n    }\n  });\n}\n\nfunction getInstanceName(target) {\n  if (target.GeoPoint || target.CustomProvider) {\n    // target is statics object. GeoPoint - Firestore, CustomProvider - AppCheck\n    return 'statics';\n  }\n  if (target._config) {\n    // module class instance, we use default to store map of deprecated methods\n    return 'default';\n  }\n\n  if (target.constructor.name === 'StorageReference') {\n    // if path passed into ref(), it will pass in the arg as target.name\n    return target.constructor.name;\n  }\n  if (target.name) {\n    // It's a function which has a name property unlike classes\n    return target.name;\n  }\n  // It's a class instance\n  return target.constructor.name;\n}\n\nexport function createDeprecationProxy(instance) {\n  return new Proxy(instance, {\n    construct(target, args) {\n      // needed for Timestamp which we pass as static, when we construct new instance, we need to wrap it in proxy again.\n      return createDeprecationProxy(new target(...args));\n    },\n    get(target, prop, receiver) {\n      const originalMethod = target[prop];\n\n      if (prop === 'constructor') {\n        return Reflect.get(target, prop, receiver);\n      }\n\n      if (target && target.constructor && target.constructor.name === 'FirestoreTimestamp') {\n        deprecationConsoleWarning('firestore', prop, 'FirestoreTimestamp', false);\n        return Reflect.get(target, prop, receiver);\n      }\n\n      if (target && target.name === 'firebaseModuleWithApp') {\n        // statics\n        if (\n          prop === 'Filter' ||\n          prop === 'FieldValue' ||\n          prop === 'Timestamp' ||\n          prop === 'GeoPoint' ||\n          prop === 'Blob' ||\n          prop === 'FieldPath'\n        ) {\n          deprecationConsoleWarning('firestore', prop, 'statics', false);\n        }\n        if (prop === 'LastFetchStatus' || prop === 'ValueSource') {\n          deprecationConsoleWarning('remoteConfig', prop, 'statics', false);\n        }\n        if (prop === 'CustomProvider') {\n          deprecationConsoleWarning('appCheck', prop, 'statics', false);\n        }\n        if (prop === 'StringFormat' || prop === 'TaskEvent' || prop === 'TaskState') {\n          deprecationConsoleWarning('storage', prop, 'statics', false);\n        }\n\n        if (\n          prop === 'PhoneAuthState' ||\n          prop === 'AppleAuthProvider' ||\n          prop === 'PhoneAuthProvider' ||\n          prop === 'GoogleAuthProvider' ||\n          prop === 'GithubAuthProvider' ||\n          prop === 'TwitterAuthProvider' ||\n          prop === 'FacebookAuthProvider' ||\n          prop === 'OAuthProvider' ||\n          prop === 'OIDCAuthProvider' ||\n          prop === 'PhoneMultiFactorGenerator' ||\n          prop === 'EmailAuthProvider' ||\n          prop === 'multiFactor' ||\n          prop === 'getMultiFactorResolver'\n        ) {\n          deprecationConsoleWarning('auth', prop, 'statics', false);\n        }\n\n        if (\n          prop === 'AuthorizationStatus' ||\n          prop === 'NotificationAndroidPriority' ||\n          prop === 'NotificationAndroidVisibility'\n        ) {\n          deprecationConsoleWarning('messaging', prop, 'statics', false);\n        }\n\n        if (prop !== 'setLogLevel') {\n          // we want to capture setLogLevel function call which we do below\n          return Reflect.get(target, prop, receiver);\n        }\n      }\n\n      // Check if it's a getter/setter first\n      const descriptor =\n        Object.getOwnPropertyDescriptor(target, prop) ||\n        Object.getOwnPropertyDescriptor(Object.getPrototypeOf(target), prop);\n\n      if (descriptor && (descriptor.get || descriptor.set)) {\n        const instanceName = getInstanceName(target);\n        const nameSpace = getNamespace(target);\n\n        if (descriptor.get) {\n          // Handle getter - call it and show deprecation warning\n          deprecationConsoleWarning(nameSpace, prop, instanceName, _isModularCall);\n          return descriptor.get.call(target);\n        }\n\n        if (descriptor.set) {\n          // Handle setter - return a function that calls the setter with deprecation warning\n          return function (value) {\n            deprecationConsoleWarning(nameSpace, prop, instanceName, _isModularCall);\n            descriptor.set.call(target, value);\n          };\n        }\n      }\n\n      if (typeof originalMethod === 'function') {\n        return function (...args) {\n          const isModularMethod = args.includes(MODULAR_DEPRECATION_ARG);\n          const instanceName = getInstanceName(target);\n          const nameSpace = getNamespace(target);\n\n          deprecationConsoleWarning(nameSpace, prop, instanceName, isModularMethod);\n\n          return originalMethod.apply(target, filterModularArgument(args));\n        };\n      }\n      return Reflect.get(target, prop, receiver);\n    },\n  });\n}\n\nexport const MODULAR_DEPRECATION_ARG = 'react-native-firebase-modular-method-call';\n\n// Flag to track if we're currently in a modular call\nlet _isModularCall = false;\n\nexport function withModularFlag(fn) {\n  const previousFlag = _isModularCall;\n  _isModularCall = true;\n  try {\n    return fn();\n  } finally {\n    _isModularCall = previousFlag;\n  }\n}\n\nexport function filterModularArgument(list) {\n  return list.filter(arg => arg !== MODULAR_DEPRECATION_ARG);\n}\n\nexport function warnIfNotModularCall(args, replacementMethodName = '') {\n  for (let i = 0; i < args.length; i++) {\n    if (args[i] === MODULAR_DEPRECATION_ARG) {\n      return;\n    }\n  }\n\n  let message = modularDeprecationMessage;\n  if (replacementMethodName.length > 0) {\n    message += ` Please use \\`${replacementMethodName}\\` instead.`;\n  }\n\n  if (!globalThis.RNFB_SILENCE_MODULAR_DEPRECATION_WARNINGS) {\n    // eslint-disable-next-line no-console\n    console.warn(message);\n\n    if (globalThis.RNFB_MODULAR_DEPRECATION_STRICT_MODE === true) {\n      throw new Error('Deprecated API usage detected while in strict mode.');\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}