{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/akhileshgogikar/Oshan/oshan-app/src/screens/LoginScreen.tsx\",\n  _this = this;\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nimport backendApi from '../services/apiService';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _Google$useAuthReques = Google.useAuthRequest({\n      androidClientId: process.env.EXPO_PUBLIC_ANDROID_CLIENT_ID,\n      iosClientId: process.env.EXPO_PUBLIC_IOS_CLIENT_ID,\n      webClientId: process.env.EXPO_PUBLIC_WEB_CLIENT_ID,\n      scopes: ['profile', 'email']\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loading = _React$useState2[0],\n    setLoading = _React$useState2[1];\n  useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var authentication = response.authentication;\n      var idToken = authentication == null ? void 0 : authentication.idToken;\n      var handleLogin = function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          setLoading(true);\n          if (idToken) {\n            try {\n              var backendResponse = yield backendApi.post('/auth/google', {\n                idToken: idToken\n              });\n              var _backendResponse$data = backendResponse.data,\n                token = _backendResponse$data.token,\n                userId = _backendResponse$data.userId;\n              yield AsyncStorage.setItem('userToken', token);\n              yield AsyncStorage.setItem('userId', userId);\n              console.log('User signed in. JWT stored.');\n              var hasCompletedOnboarding = yield AsyncStorage.getItem('hasCompletedOnboarding');\n              if (hasCompletedOnboarding === 'true') {\n                navigation.replace('MainTabs');\n              } else {\n                navigation.replace('OnboardingQuiz');\n              }\n            } catch (error) {\n              console.error('Backend authentication error:', error);\n              Alert.alert('Login Error', 'Failed to authenticate with backend.');\n            } finally {\n              setLoading(false);\n            }\n          } else {\n            Alert.alert('Login Failed', 'No ID token received from Google.');\n            setLoading(false);\n          }\n        });\n        return function handleLogin() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      handleLogin();\n    } else if ((response == null ? void 0 : response.type) === 'cancel') {\n      Alert.alert('Login Cancelled', 'Google Sign-In was cancelled.');\n    } else if ((response == null ? void 0 : response.type) === 'error') {\n      Alert.alert('Login Error', 'An error occurred during Google Sign-In.');\n    }\n  }, [response]);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Welcome to Oshan \\uD83C\\uDF0A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Discover Indian stocks with AI insights.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, _this), _jsxDEV(Button, {\n      title: \"Sign in with Google\",\n      disabled: !request || loading,\n      onPress: function onPress() {\n        setLoading(true);\n        promptAsync();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, _this), loading && _jsxDEV(ActivityIndicator, {\n      size: \"small\",\n      color: \"#0000ff\",\n      style: styles.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f0f2f5'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#333'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 30,\n    textAlign: 'center'\n  },\n  loading: {\n    marginTop: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useEffect","View","Text","Button","StyleSheet","ActivityIndicator","Alert","Google","WebBrowser","backendApi","AsyncStorage","jsxDEV","_jsxDEV","maybeCompleteAuthSession","LoginScreen","_ref","navigation","_Google$useAuthReques","useAuthRequest","androidClientId","process","env","EXPO_PUBLIC_ANDROID_CLIENT_ID","iosClientId","EXPO_PUBLIC_IOS_CLIENT_ID","webClientId","EXPO_PUBLIC_WEB_CLIENT_ID","scopes","_Google$useAuthReques2","_slicedToArray","request","response","promptAsync","_React$useState","useState","_React$useState2","loading","setLoading","type","authentication","idToken","handleLogin","_ref2","_asyncToGenerator","backendResponse","post","_backendResponse$data","data","token","userId","setItem","console","log","hasCompletedOnboarding","getItem","replace","error","alert","apply","arguments","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","subtitle","disabled","onPress","size","color","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","marginTop"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/src/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { View, Text, Button, StyleSheet, ActivityIndicator, Alert } from 'react-native';\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { RootStackParamList } from '../../App'; // Adjust path if necessary\nimport backendApi from '../services/apiService'; // Assuming apiService is available\nimport AsyncStorage from '@react-native-async-storage/async-storage'; // Import AsyncStorage\n\nWebBrowser.maybeCompleteAuthSession();\n\ntype LoginScreenProps = StackScreenProps<RootStackParamList, 'Login'>;\n\nconst LoginScreen: React.FC<LoginScreenProps> = ({ navigation }) => {\n  const [request, response, promptAsync] = Google.useAuthRequest({\n    androidClientId: process.env.EXPO_PUBLIC_ANDROID_CLIENT_ID,\n    iosClientId: process.env.EXPO_PUBLIC_IOS_CLIENT_ID,\n    webClientId: process.env.EXPO_PUBLIC_WEB_CLIENT_ID,\n    scopes: ['profile', 'email'],\n  });\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    if (response?.type === 'success') {\n      const { authentication } = response;\n      const idToken = authentication?.idToken;\n\n      const handleLogin = async () => {\n        setLoading(true);\n        if (idToken) {\n          try {\n            const backendResponse = await backendApi.post('/auth/google', { idToken });\n            const { token, userId } = backendResponse.data;\n\n            await AsyncStorage.setItem('userToken', token);\n            await AsyncStorage.setItem('userId', userId);\n\n            console.log('User signed in. JWT stored.');\n            // In a real app, you might check if user profile exists to decide navigation\n            // For this example, we assume if userId exists, user is logged in.\n            // Navigate to MainTabs or OnboardingQuiz based on whether it's a new user\n            // For now, let's always go to OnboardingQuiz if it's the first time, or MainTabs if not\n            const hasCompletedOnboarding = await AsyncStorage.getItem('hasCompletedOnboarding');\n\n            if (hasCompletedOnboarding === 'true') {\n              navigation.replace('MainTabs');\n            } else {\n              navigation.replace('OnboardingQuiz');\n            }\n\n          } catch (error) {\n            console.error('Backend authentication error:', error);\n            Alert.alert('Login Error', 'Failed to authenticate with backend.');\n          } finally {\n            setLoading(false);\n          }\n        } else {\n          Alert.alert('Login Failed', 'No ID token received from Google.');\n          setLoading(false);\n        }\n      };\n      handleLogin();\n    } else if (response?.type === 'cancel') {\n        Alert.alert('Login Cancelled', 'Google Sign-In was cancelled.');\n    } else if (response?.type === 'error') {\n        Alert.alert('Login Error', 'An error occurred during Google Sign-In.');\n    }\n  }, [response]);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Welcome to Oshan ðŸŒŠ</Text>\n      <Text style={styles.subtitle}>Discover Indian stocks with AI insights.</Text>\n      <Button\n        title=\"Sign in with Google\"\n        disabled={!request || loading}\n        onPress={() => {\n          setLoading(true);\n          promptAsync();\n        }}\n      />\n      {loading && <ActivityIndicator size=\"small\" color=\"#0000ff\" style={styles.loading} />}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f0f2f5',\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#333',\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 30,\n    textAlign: 'center',\n  },\n  loading: {\n    marginTop: 20,\n  },\n});\n\nexport default LoginScreen;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAEzC,OAAO,KAAKC,MAAM,MAAM,oCAAoC;AAC5D,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAG9C,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErEJ,UAAU,CAACK,wBAAwB,CAAC,CAAC;AAIrC,IAAMC,WAAuC,GAAG,SAA1CA,WAAuCA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3D,IAAAC,qBAAA,GAAyCV,MAAM,CAACW,cAAc,CAAC;MAC7DC,eAAe,EAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B;MAC1DC,WAAW,EAAEH,OAAO,CAACC,GAAG,CAACG,yBAAyB;MAClDC,WAAW,EAAEL,OAAO,CAACC,GAAG,CAACK,yBAAyB;MAClDC,MAAM,EAAE,CAAC,SAAS,EAAE,OAAO;IAC7B,CAAC,CAAC;IAAAC,sBAAA,GAAAC,cAAA,CAAAZ,qBAAA;IALKa,OAAO,GAAAF,sBAAA;IAAEG,QAAQ,GAAAH,sBAAA;IAAEI,WAAW,GAAAJ,sBAAA;EAOrC,IAAAK,eAAA,GAA8BlC,KAAK,CAACmC,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAN,cAAA,CAAAI,eAAA;IAA5CG,OAAO,GAAAD,gBAAA;IAAEE,UAAU,GAAAF,gBAAA;EAE1BnC,SAAS,CAAC,YAAM;IACd,IAAI,CAAA+B,QAAQ,oBAARA,QAAQ,CAAEO,IAAI,MAAK,SAAS,EAAE;MAChC,IAAQC,cAAc,GAAKR,QAAQ,CAA3BQ,cAAc;MACtB,IAAMC,OAAO,GAAGD,cAAc,oBAAdA,cAAc,CAAEC,OAAO;MAEvC,IAAMC,WAAW;QAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;UAC9BN,UAAU,CAAC,IAAI,CAAC;UAChB,IAAIG,OAAO,EAAE;YACX,IAAI;cACF,IAAMI,eAAe,SAASnC,UAAU,CAACoC,IAAI,CAAC,cAAc,EAAE;gBAAEL,OAAO,EAAPA;cAAQ,CAAC,CAAC;cAC1E,IAAAM,qBAAA,GAA0BF,eAAe,CAACG,IAAI;gBAAtCC,KAAK,GAAAF,qBAAA,CAALE,KAAK;gBAAEC,MAAM,GAAAH,qBAAA,CAANG,MAAM;cAErB,MAAMvC,YAAY,CAACwC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;cAC9C,MAAMtC,YAAY,CAACwC,OAAO,CAAC,QAAQ,EAAED,MAAM,CAAC;cAE5CE,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;cAK1C,IAAMC,sBAAsB,SAAS3C,YAAY,CAAC4C,OAAO,CAAC,wBAAwB,CAAC;cAEnF,IAAID,sBAAsB,KAAK,MAAM,EAAE;gBACrCrC,UAAU,CAACuC,OAAO,CAAC,UAAU,CAAC;cAChC,CAAC,MAAM;gBACLvC,UAAU,CAACuC,OAAO,CAAC,gBAAgB,CAAC;cACtC;YAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;cACdL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;cACrDlD,KAAK,CAACmD,KAAK,CAAC,aAAa,EAAE,sCAAsC,CAAC;YACpE,CAAC,SAAS;cACRpB,UAAU,CAAC,KAAK,CAAC;YACnB;UACF,CAAC,MAAM;YACL/B,KAAK,CAACmD,KAAK,CAAC,cAAc,EAAE,mCAAmC,CAAC;YAChEpB,UAAU,CAAC,KAAK,CAAC;UACnB;QACF,CAAC;QAAA,gBAjCKI,WAAWA,CAAA;UAAA,OAAAC,KAAA,CAAAgB,KAAA,OAAAC,SAAA;QAAA;MAAA,GAiChB;MACDlB,WAAW,CAAC,CAAC;IACf,CAAC,MAAM,IAAI,CAAAV,QAAQ,oBAARA,QAAQ,CAAEO,IAAI,MAAK,QAAQ,EAAE;MACpChC,KAAK,CAACmD,KAAK,CAAC,iBAAiB,EAAE,+BAA+B,CAAC;IACnE,CAAC,MAAM,IAAI,CAAA1B,QAAQ,oBAARA,QAAQ,CAAEO,IAAI,MAAK,OAAO,EAAE;MACnChC,KAAK,CAACmD,KAAK,CAAC,aAAa,EAAE,0CAA0C,CAAC;IAC1E;EACF,CAAC,EAAE,CAAC1B,QAAQ,CAAC,CAAC;EAEd,OACEnB,OAAA,CAACX,IAAI;IAAC2D,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BnD,OAAA,CAACV,IAAI;MAAC0D,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC,EACrDzD,OAAA,CAACV,IAAI;MAAC0D,KAAK,EAAEC,MAAM,CAACS,QAAS;MAAAP,QAAA,EAAC;IAAwC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC,EAC7EzD,OAAA,CAACT,MAAM;MACL6D,KAAK,EAAC,qBAAqB;MAC3BO,QAAQ,EAAE,CAACzC,OAAO,IAAIM,OAAQ;MAC9BoC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;QACbnC,UAAU,CAAC,IAAI,CAAC;QAChBL,WAAW,CAAC,CAAC;MACf;IAAE;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACH,CAAC,EACDjC,OAAO,IAAIxB,OAAA,CAACP,iBAAiB;MAACoE,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC,SAAS;MAACd,KAAK,EAAEC,MAAM,CAACzB;IAAQ;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACjF,CAAC;AAEX,CAAC;AAED,IAAMR,MAAM,GAAGzD,UAAU,CAACuE,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACDhB,KAAK,EAAE;IACLiB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBT,KAAK,EAAE;EACT,CAAC;EACDJ,QAAQ,EAAE;IACRW,QAAQ,EAAE,EAAE;IACZP,KAAK,EAAE,MAAM;IACbS,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDhD,OAAO,EAAE;IACPiD,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAevE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}