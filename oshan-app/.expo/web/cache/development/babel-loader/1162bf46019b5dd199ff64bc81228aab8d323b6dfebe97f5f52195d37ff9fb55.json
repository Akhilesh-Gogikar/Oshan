{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar LogLevel = {\n  DEBUG: 0,\n  VERBOSE: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n  SILENT: 5\n};\nvar reverseLogLevel = function reverseLogLevel(obj) {\n  var reversed = {};\n  for (var _ref of Object.entries(obj)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var key = _ref2[0];\n    var value = _ref2[1];\n    reversed[value] = key;\n  }\n  return reversed;\n};\nvar LogLevelReversed = reverseLogLevel(LogLevel);\nvar levelStringToEnum = {\n  debug: LogLevel.DEBUG,\n  verbose: LogLevel.VERBOSE,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  silent: LogLevel.SILENT\n};\nvar ConsoleMethod = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, LogLevel.DEBUG, 'log'), LogLevel.VERBOSE, 'log'), LogLevel.INFO, 'info'), LogLevel.WARN, 'warn'), LogLevel.ERROR, 'error');\nvar defaultLogHandler = function defaultLogHandler(instance, logType) {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  var now = new Date().toISOString();\n  var method = ConsoleMethod[logType];\n  if (method) {\n    var _console;\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    (_console = console)[method].apply(_console, [`[${now}]  ${instance.name}:`].concat(args));\n  } else {\n    throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\n  }\n};\nvar defaultLogLevel = LogLevel.INFO;\nexport var instances = [];\nexport var Logger = function () {\n  function Logger(name) {\n    _classCallCheck(this, Logger);\n    this._logLevel = defaultLogLevel;\n    this._logHandler = defaultLogHandler;\n    this._userLogHandler = null;\n    this.name = name;\n    instances.push(this);\n  }\n  return _createClass(Logger, [{\n    key: \"logLevel\",\n    get: function get() {\n      return this._logLevel;\n    },\n    set: function set(val) {\n      if (!(val in LogLevel)) {\n        throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n      }\n      this._logLevel = val;\n    }\n  }, {\n    key: \"setLogLevel\",\n    value: function setLogLevel(val) {\n      this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n    }\n  }, {\n    key: \"logHandler\",\n    get: function get() {\n      return this._logHandler;\n    },\n    set: function set(val) {\n      if (typeof val !== 'function') {\n        throw new TypeError('Value assigned to `logHandler` must be a function');\n      }\n      this._logHandler = val;\n    }\n  }, {\n    key: \"userLogHandler\",\n    get: function get() {\n      return this._userLogHandler;\n    },\n    set: function set(val) {\n      this._userLogHandler = val;\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._userLogHandler && this._userLogHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\n      this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._userLogHandler && this._userLogHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\n      this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._userLogHandler && this._userLogHandler.apply(this, [this, LogLevel.INFO].concat(args));\n      this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._userLogHandler && this._userLogHandler.apply(this, [this, LogLevel.WARN].concat(args));\n      this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._userLogHandler && this._userLogHandler.apply(this, [this, LogLevel.ERROR].concat(args));\n      this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\n    }\n  }]);\n}();\nexport function setLogLevelInternal(level) {\n  instances.forEach(function (inst) {\n    inst.setLogLevel(level);\n  });\n}\nexport function setUserLogHandler(logCallback, options) {\n  var _loop = function _loop() {\n    var customLogLevel = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = function (instance, level) {\n        var _customLogLevel;\n        for (var _len7 = arguments.length, args = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n          args[_key7 - 2] = arguments[_key7];\n        }\n        var message = args.map(function (arg) {\n          if (arg == null) {\n            return null;\n          } else if (typeof arg === 'string') {\n            return arg;\n          } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n            return arg.toString();\n          } else if (arg instanceof Error) {\n            return arg.message;\n          } else {\n            try {\n              return JSON.stringify(arg);\n            } catch (_ignored) {\n              return null;\n            }\n          }\n        }).filter(function (arg) {\n          return arg;\n        }).join(' ');\n        if (level >= ((_customLogLevel = customLogLevel) != null ? _customLogLevel : instance.logLevel)) {\n          logCallback({\n            level: LogLevelReversed[level].toLowerCase(),\n            message: message,\n            args: args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  };\n  for (var instance of instances) {\n    _loop();\n  }\n}","map":{"version":3,"names":["LogLevel","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","reverseLogLevel","obj","reversed","_ref","Object","entries","_ref2","_slicedToArray","key","value","LogLevelReversed","levelStringToEnum","debug","verbose","info","warn","error","silent","ConsoleMethod","_defineProperty","defaultLogHandler","instance","logType","logLevel","now","Date","toISOString","method","_console","_len","arguments","length","args","Array","_key","console","apply","name","concat","Error","defaultLogLevel","instances","Logger","_classCallCheck","_logLevel","_logHandler","_userLogHandler","push","_createClass","get","set","val","TypeError","setLogLevel","_len2","_key2","log","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","setLogLevelInternal","level","forEach","inst","setUserLogHandler","logCallback","options","_loop","customLogLevel","userLogHandler","_customLogLevel","_len7","_key7","message","map","arg","toString","JSON","stringify","_ignored","filter","join","toLowerCase","type"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/node_modules/@react-native-firebase/app/lib/internal/logger.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/**\n * @typedef {import('./logger').Logger} Logger\n * @typedef {import('./logger').setLogLevel} setLogLevel\n * @typedef {import('./logger').setUserLogHandler} setUserLogHandler\n * @typedef {import('./logger').LogHandler} LogHandler\n * @typedef {import('./logger').LogLevel} LogLevel\n * @typedef {import('./logger').LevelStringToEnum} LevelStringToEnum\n * @typedef {import('./logger').DefaultLogLevel} DefaultLogLevel\n */\n\nconst LogLevel = {\n  DEBUG: 0,\n  VERBOSE: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n  SILENT: 5,\n};\n\n// mimic the LogLevel in firebase-js-sdk TS\nconst reverseLogLevel = obj => {\n  const reversed = {};\n  for (const [key, value] of Object.entries(obj)) {\n    reversed[value] = key;\n  }\n  return reversed;\n};\n\nconst LogLevelReversed = reverseLogLevel(LogLevel);\n\nconst levelStringToEnum = {\n  debug: LogLevel.DEBUG,\n  verbose: LogLevel.VERBOSE,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  silent: LogLevel.SILENT,\n};\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error',\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n * @type {LogHandler}\n */\nconst defaultLogHandler = (instance, logType, ...args) => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType];\n  if (method) {\n    // 'log' | 'info' | 'warn' | 'error'\n    // eslint-disable-next-line no-console\n    console[method](`[${now}]  ${instance.name}:`, ...args);\n  } else {\n    throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\n  }\n};\n\nconst defaultLogLevel = LogLevel.INFO;\n\nexport const instances = [];\n\n/**\n * @type {Logger}\n */\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(name) {\n    /**\n     * Capture the current instance for later use\n     */\n    this.name = name;\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  _logLevel = defaultLogLevel;\n\n  get logLevel() {\n    return this._logLevel;\n  }\n\n  set logLevel(val) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val) {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  _logHandler = defaultLogHandler;\n  get logHandler() {\n    return this._logHandler;\n  }\n  set logHandler(val) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  _userLogHandler = null;\n  get userLogHandler() {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\n/**\n * @type {setLogLevel}\n */\nexport function setLogLevelInternal(level) {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\n/**\n * @type {setUserLogHandler}\n */\nexport function setUserLogHandler(logCallback, options) {\n  for (const instance of instances) {\n    let customLogLevel = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (instance, level, ...args) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (_ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevelReversed[level].toLowerCase(),\n            message,\n            args,\n            type: instance.name,\n          });\n        }\n      };\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}