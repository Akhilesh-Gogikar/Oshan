{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"android_ripple\", \"pressColor\", \"pressOpacity\", \"style\", \"onPress\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ANDROID_VERSION_LOLLIPOP = 21;\nvar ANDROID_SUPPORTS_RIPPLE = Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\nexport function PlatformPressable(_ref) {\n  var disabled = _ref.disabled,\n    android_ripple = _ref.android_ripple,\n    _ref$pressColor = _ref.pressColor,\n    pressColor = _ref$pressColor === void 0 ? 'rgba(0, 0, 0, .32)' : _ref$pressColor,\n    pressOpacity = _ref.pressOpacity,\n    _style = _ref.style,\n    onPress = _ref.onPress,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var handlePress = function handlePress(e) {\n    if (Platform.OS === 'web' && rest.href !== null) {\n      var hasModifierKey = 'metaKey' in e && e.metaKey || 'altKey' in e && e.altKey || 'ctrlKey' in e && e.ctrlKey || 'shiftKey' in e && e.shiftKey;\n      var isLeftClick = 'button' in e ? e.button == null || e.button === 0 : true;\n      var isSelfTarget = e.currentTarget && 'target' in e.currentTarget ? [undefined, null, '', 'self'].includes(e.currentTarget.target) : true;\n      if (!hasModifierKey && isLeftClick && isSelfTarget) {\n        e.preventDefault();\n        onPress == null ? void 0 : onPress(e);\n      }\n    } else {\n      onPress == null ? void 0 : onPress(e);\n    }\n  };\n  return _jsx(Pressable, _objectSpread({\n    android_ripple: ANDROID_SUPPORTS_RIPPLE ? _objectSpread({\n      color: pressColor\n    }, android_ripple) : undefined,\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [{\n        cursor: Platform.OS === 'web' || Platform.OS === 'ios' ? 'pointer' : 'auto',\n        opacity: pressed && !ANDROID_SUPPORTS_RIPPLE ? pressOpacity : 1\n      }, typeof _style === 'function' ? _style({\n        pressed: pressed\n      }) : _style];\n    },\n    onPress: disabled ? undefined : handlePress\n  }, rest));\n}","map":{"version":3,"names":["React","Platform","Pressable","jsx","_jsx","ANDROID_VERSION_LOLLIPOP","ANDROID_SUPPORTS_RIPPLE","OS","Version","PlatformPressable","_ref","disabled","android_ripple","_ref$pressColor","pressColor","pressOpacity","style","onPress","rest","_objectWithoutProperties","_excluded","handlePress","e","href","hasModifierKey","metaKey","altKey","ctrlKey","shiftKey","isLeftClick","button","isSelfTarget","currentTarget","undefined","includes","target","preventDefault","_objectSpread","color","_ref2","pressed","cursor","opacity"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/node_modules/react-native-tab-view/src/PlatformPressable.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  type GestureResponderEvent,\n  Platform,\n  Pressable,\n  type PressableProps,\n} from 'react-native';\n\nexport type Props = Omit<PressableProps, 'onPress'> & {\n  href?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  children: React.ReactNode;\n};\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport function PlatformPressable({\n  disabled,\n  android_ripple,\n  pressColor = 'rgba(0, 0, 0, .32)',\n  pressOpacity,\n  style,\n  onPress,\n  ...rest\n}: Props) {\n  const handlePress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if (Platform.OS === 'web' && rest.href !== null) {\n      // ignore clicks with modifier keys\n      const hasModifierKey =\n        ('metaKey' in e && e.metaKey) ||\n        ('altKey' in e && e.altKey) ||\n        ('ctrlKey' in e && e.ctrlKey) ||\n        ('shiftKey' in e && e.shiftKey);\n\n      // only handle left clicks\n      const isLeftClick =\n        'button' in e ? e.button == null || e.button === 0 : true;\n\n      // let browser handle \"target=_blank\" etc.\n      const isSelfTarget =\n        e.currentTarget && 'target' in e.currentTarget\n          ? [undefined, null, '', 'self'].includes(e.currentTarget.target)\n          : true;\n\n      if (!hasModifierKey && isLeftClick && isSelfTarget) {\n        e.preventDefault();\n        // call `onPress` only when browser default is prevented\n        // this prevents app from handling the click when a link is being opened\n        onPress?.(e);\n      }\n    } else {\n      onPress?.(e);\n    }\n  };\n\n  return (\n    <Pressable\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? { color: pressColor, ...android_ripple }\n          : undefined\n      }\n      style={({ pressed }) => [\n        {\n          cursor:\n            Platform.OS === 'web' || Platform.OS === 'ios'\n              ? // Pointer cursor on web\n                // Hover effect on iPad and visionOS\n                'pointer'\n              : 'auto',\n          opacity: pressed && !ANDROID_SUPPORTS_RIPPLE ? pressOpacity : 1,\n        } as const,\n        typeof style === 'function' ? style({ pressed }) : style,\n      ]}\n      onPress={disabled ? undefined : handlePress}\n      {...rest}\n    />\n  );\n}\n"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAMR,SAAAC,GAAA,IAAAC,IAAA;AAYtB,IAAMC,wBAAwB,GAAG,EAAE;AACnC,IAAMC,uBAAuB,GAC3BL,QAAQ,CAACM,EAAE,KAAK,SAAS,IAAIN,QAAQ,CAACO,OAAO,IAAIH,wBAAwB;AAK3E,OAAO,SAASI,iBAAiBA,CAAAC,IAAA,EAQvB;EAAA,IAPRC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRC,cAAc,GAAAF,IAAA,CAAdE,cAAc;IAAAC,eAAA,GAAAH,IAAA,CACdI,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,oBAAoB,GAAAA,eAAA;IACjCE,YAAY,GAAAL,IAAA,CAAZK,YAAY;IACZC,MAAK,GAAAN,IAAA,CAALM,KAAK;IACLC,OAAO,GAAAP,IAAA,CAAPO,OAAO;IACJC,IAAA,GAAAC,wBAAA,CAAAT,IAAA,EAAAU,SAAA;EAEH,IAAMC,WAAW,GACf,SADIA,WAAWA,CACfC,CAA0E,EACvE;IACH,IAAIrB,QAAQ,CAACM,EAAE,KAAK,KAAK,IAAIW,IAAI,CAACK,IAAI,KAAK,IAAI,EAAE;MAE/C,IAAMC,cAAc,GACjB,SAAS,IAAIF,CAAC,IAAIA,CAAC,CAACG,OAAO,IAC3B,QAAQ,IAAIH,CAAC,IAAIA,CAAC,CAACI,MAAO,IAC1B,SAAS,IAAIJ,CAAC,IAAIA,CAAC,CAACK,OAAQ,IAC5B,UAAU,IAAIL,CAAC,IAAIA,CAAC,CAACM,QAAS;MAGjC,IAAMC,WAAW,GACf,QAAQ,IAAIP,CAAC,GAAGA,CAAC,CAACQ,MAAM,IAAI,IAAI,IAAIR,CAAC,CAACQ,MAAM,KAAK,CAAC,GAAG,IAAI;MAG3D,IAAMC,YAAY,GAChBT,CAAC,CAACU,aAAa,IAAI,QAAQ,IAAIV,CAAC,CAACU,aAAa,GAC1C,CAACC,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAACC,QAAQ,CAACZ,CAAC,CAACU,aAAa,CAACG,MAAM,CAAC,GAC9D,IAAI;MAEV,IAAI,CAACX,cAAc,IAAIK,WAAW,IAAIE,YAAY,EAAE;QAClDT,CAAC,CAACc,cAAc,CAAC,CAAC;QAGlBnB,OAAO,oBAAPA,OAAO,CAAGK,CAAC,CAAC;MACd;IACF,CAAC,MAAM;MACLL,OAAO,oBAAPA,OAAO,CAAGK,CAAC,CAAC;IACd;EACF,CAAC;EAED,OACElB,IAAA,CAACF,SAAS,EAAAmC,aAAA;IACRzB,cAAc,EACZN,uBAAuB,GAAA+B,aAAA;MACjBC,KAAK,EAAExB;IAAU,GAAKF,cAAA,IACxBqB,SACL;IACDjB,KAAK,EAAE,SAAPA,KAAKA,CAAAuB,KAAA;MAAA,IAAKC,OAAA,GAAAD,KAAA,CAAAC,OAAA;MAAA,OAAc,CACtB;QACEC,MAAM,EACJxC,QAAQ,CAACM,EAAE,KAAK,KAAK,IAAIN,QAAQ,CAACM,EAAE,KAAK,KAAK,GAG1C,SAAS,GACT,MAAM;QACZmC,OAAO,EAAEF,OAAO,IAAI,CAAClC,uBAAuB,GAAGS,YAAY,GAAG;MAChE,CAAC,EACD,OAAOC,MAAK,KAAK,UAAU,GAAGA,MAAK,CAAC;QAAEwB,OAAA,EAAAA;MAAQ,CAAC,CAAC,GAAGxB,MAAK,CACxD;IAAA;IACFC,OAAO,EAAEN,QAAQ,GAAGsB,SAAS,GAAGZ;EAAY,GACxCH,IAAA,CACL,CAAC;AAEN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}