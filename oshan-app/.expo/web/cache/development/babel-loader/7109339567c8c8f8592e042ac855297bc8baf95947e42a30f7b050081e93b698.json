{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/akhileshgogikar/Oshan/oshan-app/src/components/ChatComponent.tsx\",\n  _this = this;\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { sendChatMessage } from '../services/backendService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ChatComponent = function ChatComponent(_ref) {\n  var _ref$initialMessages = _ref.initialMessages,\n    initialMessages = _ref$initialMessages === void 0 ? [] : _ref$initialMessages,\n    context = _ref.context;\n  var _useState = useState(initialMessages),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var scrollViewRef = useRef(null);\n  useEffect(function () {\n    if (scrollViewRef.current) {\n      scrollViewRef.current.scrollToEnd({\n        animated: true\n      });\n    }\n  }, [messages]);\n  var handleSendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (inputText.trim().length === 0) return;\n      var newUserMessage = {\n        role: 'user',\n        content: inputText.trim()\n      };\n      var updatedMessages = [].concat(_toConsumableArray(messages), [newUserMessage]);\n      setMessages(updatedMessages);\n      setInputText('');\n      setIsLoading(true);\n      try {\n        var messageContent = context ? `Current context: ${JSON.stringify(context)}. User message: ${newUserMessage.content}` : newUserMessage.content;\n        var messagesToSend = updatedMessages.map(function (msg) {\n          return {\n            role: msg.role,\n            content: msg.content\n          };\n        });\n        messagesToSend[messagesToSend.length - 1] = {\n          role: 'user',\n          content: messageContent\n        };\n        var response = yield sendChatMessage(messagesToSend);\n        if (response && response.success && response.response) {\n          setMessages(function (prev) {\n            return [].concat(_toConsumableArray(prev), [{\n              role: 'assistant',\n              content: response.response\n            }]);\n          });\n        } else {\n          setMessages(function (prev) {\n            return [].concat(_toConsumableArray(prev), [{\n              role: 'assistant',\n              content: 'Sorry, I could not get a response.'\n            }]);\n          });\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [{\n            role: 'assistant',\n            content: 'An error occurred. Please try again later.'\n          }]);\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function handleSendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    keyboardVerticalOffset: Platform.OS === \"ios\" ? 90 : 0,\n    children: [_jsxDEV(ScrollView, {\n      ref: scrollViewRef,\n      contentContainerStyle: styles.messagesContainer,\n      onContentSizeChange: function onContentSizeChange() {\n        var _scrollViewRef$curren;\n        return (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollToEnd({\n          animated: true\n        });\n      },\n      children: [messages.map(function (msg, index) {\n        return _jsxDEV(View, {\n          style: [styles.messageBubble, msg.role === 'user' ? styles.userMessage : styles.assistantMessage],\n          children: _jsxDEV(Text, {\n            style: msg.role === 'user' ? styles.userText : styles.assistantText,\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, _this);\n      }), isLoading && _jsxDEV(View, {\n        style: styles.loadingContainer,\n        children: [_jsxDEV(ActivityIndicator, {\n          size: \"small\",\n          color: \"#007AFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, _this), _jsxDEV(Text, {\n          style: styles.loadingText,\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.inputContainer,\n      children: [_jsxDEV(TextInput, {\n        style: styles.textInput,\n        value: inputText,\n        onChangeText: setInputText,\n        placeholder: \"Ask Oshan anything...\",\n        placeholderTextColor: \"#999\",\n        multiline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: handleSendMessage,\n        disabled: isLoading || inputText.trim().length === 0,\n        children: isLoading ? _jsxDEV(ActivityIndicator, {\n          size: \"small\",\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, _this) : _jsxDEV(Ionicons, {\n          name: \"send\",\n          size: 24,\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  messagesContainer: {\n    padding: 10,\n    paddingBottom: 20\n  },\n  messageBubble: {\n    padding: 12,\n    borderRadius: 20,\n    marginVertical: 5,\n    maxWidth: '80%',\n    elevation: 1,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22\n  },\n  userMessage: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF'\n  },\n  assistantMessage: {\n    alignSelf: 'flex-start',\n    backgroundColor: '#e0e0e0'\n  },\n  userText: {\n    color: '#fff',\n    fontSize: 16\n  },\n  assistantText: {\n    color: '#333',\n    fontSize: 16\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    padding: 10,\n    borderTopWidth: 1,\n    borderTopColor: '#ddd',\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  textInput: {\n    flex: 1,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginRight: 10,\n    fontSize: 16,\n    maxHeight: 120\n  },\n  sendButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 25,\n    width: 50,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    alignSelf: 'flex-start',\n    backgroundColor: '#e0e0e0',\n    borderRadius: 20,\n    marginVertical: 5\n  },\n  loadingText: {\n    marginLeft: 10,\n    color: '#333'\n  }\n});\nexport default ChatComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TextInput","TouchableOpacity","ScrollView","StyleSheet","KeyboardAvoidingView","Platform","ActivityIndicator","Ionicons","sendChatMessage","jsxDEV","_jsxDEV","ChatComponent","_ref","_ref$initialMessages","initialMessages","context","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","inputText","setInputText","_useState5","_useState6","isLoading","setIsLoading","scrollViewRef","current","scrollToEnd","animated","handleSendMessage","_ref2","_asyncToGenerator","trim","length","newUserMessage","role","content","updatedMessages","concat","_toConsumableArray","messageContent","JSON","stringify","messagesToSend","map","msg","response","success","prev","error","console","apply","arguments","style","styles","container","behavior","OS","keyboardVerticalOffset","children","ref","contentContainerStyle","messagesContainer","onContentSizeChange","_scrollViewRef$curren","index","messageBubble","userMessage","assistantMessage","userText","assistantText","fileName","_jsxFileName","lineNumber","columnNumber","_this","loadingContainer","size","color","loadingText","inputContainer","textInput","value","onChangeText","placeholder","placeholderTextColor","multiline","sendButton","onPress","disabled","name","create","flex","backgroundColor","padding","paddingBottom","borderRadius","marginVertical","maxWidth","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","alignSelf","fontSize","flexDirection","borderTopWidth","borderTopColor","alignItems","borderColor","borderWidth","paddingHorizontal","paddingVertical","marginRight","maxHeight","justifyContent","marginLeft"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/src/components/ChatComponent.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ScrollView, StyleSheet, KeyboardAvoidingView, Platform, ActivityIndicator } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons'; // Assuming Expo for icons\nimport { sendChatMessage } from '../services/backendService';\nimport { ChatMessage } from '../services/backendService';\n\ninterface ChatComponentProps {\n  initialMessages?: ChatMessage[];\n  context?: any; // Context for the LLM, e.g., stock details\n}\n\nconst ChatComponent: React.FC<ChatComponentProps> = ({ initialMessages = [], context }) => {\n  const [messages, setMessages] = useState<ChatMessage[]>(initialMessages);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const scrollViewRef = useRef<ScrollView>(null);\n\n  useEffect(() => {\n    // Scroll to the bottom when messages change\n    if (scrollViewRef.current) {\n      scrollViewRef.current.scrollToEnd({ animated: true });\n    }\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (inputText.trim().length === 0) return;\n\n    const newUserMessage: ChatMessage = { role: 'user', content: inputText.trim() };\n    const updatedMessages = [...messages, newUserMessage];\n    setMessages(updatedMessages);\n    setInputText('');\n    setIsLoading(true);\n\n    try {\n      // Constructing messages for the backend API\n      // If there's context, add it to the user's message\n      const messageContent = context\n        ? `Current context: ${JSON.stringify(context)}. User message: ${newUserMessage.content}`\n        : newUserMessage.content;\n\n      // Constructing messages for the backend API (sending only user/assistant messages)\n      const messagesToSend = updatedMessages.map(msg => ({\n        role: msg.role,\n        content: msg.content,\n      }));\n\n      // Replace the last user message with the one including context\n      messagesToSend[messagesToSend.length - 1] = { role: 'user', content: messageContent };\n      \n      const response = await sendChatMessage(messagesToSend);\n\n      if (response && response.success && response.response) {\n        setMessages(prev => [...prev, { role: 'assistant', content: response.response }]);\n      } else {\n        setMessages(prev => [...prev, { role: 'assistant', content: 'Sorry, I could not get a response.' }]);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prev => [...prev, { role: 'assistant', content: 'An error occurred. Please try again later.' }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView \n      style={styles.container}\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      keyboardVerticalOffset={Platform.OS === \"ios\" ? 90 : 0} // Adjust this offset as needed\n    >\n      <ScrollView \n        ref={scrollViewRef} \n        contentContainerStyle={styles.messagesContainer}\n        onContentSizeChange={() => scrollViewRef.current?.scrollToEnd({ animated: true })}\n      >\n        {messages.map((msg, index) => (\n          <View key={index} style={[\n            styles.messageBubble,\n            msg.role === 'user' ? styles.userMessage : styles.assistantMessage,\n          ]}>\n            <Text style={msg.role === 'user' ? styles.userText : styles.assistantText}>\n              {msg.content}\n            </Text>\n          </View>\n        ))}\n        {isLoading && (\n          <View style={styles.loadingContainer}>\n            <ActivityIndicator size=\"small\" color=\"#007AFF\" />\n            <Text style={styles.loadingText}>Thinking...</Text>\n          </View>\n        )}\n      </ScrollView>\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.textInput}\n          value={inputText}\n          onChangeText={setInputText}\n          placeholder=\"Ask Oshan anything...\"\n          placeholderTextColor=\"#999\"\n          multiline\n        />\n        <TouchableOpacity \n          style={styles.sendButton} \n          onPress={handleSendMessage} \n          disabled={isLoading || inputText.trim().length === 0}\n        >\n          {isLoading ? (\n            <ActivityIndicator size=\"small\" color=\"#fff\" />\n          ) : (\n            <Ionicons name=\"send\" size={24} color=\"#fff\" />\n          )}\n        </TouchableOpacity>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  messagesContainer: {\n    padding: 10,\n    paddingBottom: 20, // Add some bottom padding\n  },\n  messageBubble: {\n    padding: 12,\n    borderRadius: 20,\n    marginVertical: 5,\n    maxWidth: '80%',\n    elevation: 1, // Shadow for Android\n    shadowColor: '#000', // Shadow for iOS\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n  userMessage: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n  },\n  assistantMessage: {\n    alignSelf: 'flex-start',\n    backgroundColor: '#e0e0e0',\n  },\n  userText: {\n    color: '#fff',\n    fontSize: 16,\n  },\n  assistantText: {\n    color: '#333',\n    fontSize: 16,\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    padding: 10,\n    borderTopWidth: 1,\n    borderTopColor: '#ddd',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n  },\n  textInput: {\n    flex: 1,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginRight: 10,\n    fontSize: 16,\n    maxHeight: 120, // Limit height for multiline input\n  },\n  sendButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 25,\n    width: 50,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    alignSelf: 'flex-start',\n    backgroundColor: '#e0e0e0',\n    borderRadius: 20,\n    marginVertical: 5,\n  },\n  loadingText: {\n    marginLeft: 10,\n    color: '#333',\n  },\n});\n\nexport default ChatComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}