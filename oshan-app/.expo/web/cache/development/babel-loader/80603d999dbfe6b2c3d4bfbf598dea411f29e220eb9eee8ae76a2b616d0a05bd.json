{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"timing\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useLatestCallback from 'use-latest-callback';\nimport { useAnimatedValue } from \"./useAnimatedValue.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DEAD_ZONE = 12;\nvar DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true\n};\nexport function PanResponderAdapter(_ref) {\n  var layout = _ref.layout,\n    _ref$keyboardDismissM = _ref.keyboardDismissMode,\n    keyboardDismissMode = _ref$keyboardDismissM === void 0 ? 'auto' : _ref$keyboardDismissM,\n    _ref$swipeEnabled = _ref.swipeEnabled,\n    swipeEnabled = _ref$swipeEnabled === void 0 ? true : _ref$swipeEnabled,\n    navigationState = _ref.navigationState,\n    onIndexChange = _ref.onIndexChange,\n    onTabSelect = _ref.onTabSelect,\n    onSwipeStart = _ref.onSwipeStart,\n    onSwipeEnd = _ref.onSwipeEnd,\n    children = _ref.children,\n    style = _ref.style,\n    _ref$animationEnabled = _ref.animationEnabled,\n    animationEnabled = _ref$animationEnabled === void 0 ? false : _ref$animationEnabled,\n    _ref$layoutDirection = _ref.layoutDirection,\n    layoutDirection = _ref$layoutDirection === void 0 ? 'ltr' : _ref$layoutDirection;\n  var routes = navigationState.routes,\n    index = navigationState.index;\n  var panX = useAnimatedValue(0);\n  var listenersRef = React.useRef([]);\n  var navigationStateRef = React.useRef(navigationState);\n  var layoutRef = React.useRef(layout);\n  var onIndexChangeRef = React.useRef(onIndexChange);\n  var onTabSelectRef = React.useRef(onTabSelect);\n  var currentIndexRef = React.useRef(index);\n  var pendingIndexRef = React.useRef(undefined);\n  var swipeVelocityThreshold = 0.15;\n  var swipeDistanceThreshold = layout.width / 1.75;\n  var jumpToIndex = useLatestCallback(function (index) {\n    var animate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : animationEnabled;\n    var offset = -index * layoutRef.current.width;\n    var timing = DefaultTransitionSpec.timing,\n      transitionConfig = _objectWithoutProperties(DefaultTransitionSpec, _excluded);\n    if (animate) {\n      Animated.parallel([timing(panX, _objectSpread(_objectSpread({}, transitionConfig), {}, {\n        toValue: offset,\n        useNativeDriver: false\n      }))]).start(function (_ref2) {\n        var finished = _ref2.finished;\n        if (finished) {\n          onIndexChangeRef.current(index);\n          onTabSelectRef.current == null ? void 0 : onTabSelectRef.current({\n            index: index\n          });\n          pendingIndexRef.current = undefined;\n        }\n      });\n      pendingIndexRef.current = index;\n    } else {\n      panX.setValue(offset);\n      onIndexChangeRef.current(index);\n      onTabSelectRef.current == null ? void 0 : onTabSelectRef.current({\n        index: index\n      });\n      pendingIndexRef.current = undefined;\n    }\n  });\n  React.useEffect(function () {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n    onTabSelectRef.current = onTabSelect;\n  });\n  React.useEffect(function () {\n    var offset = -navigationStateRef.current.index * layout.width;\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n  React.useEffect(function () {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n  var isMovingHorizontally = function isMovingHorizontally(_, gestureState) {\n    return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2);\n  };\n  var canMoveScreen = function canMoveScreen(event, gestureState) {\n    if (swipeEnabled === false) {\n      return false;\n    }\n    var diffX = layoutDirection === 'rtl' ? -gestureState.dx : gestureState.dx;\n    return isMovingHorizontally(event, gestureState) && (diffX >= DEAD_ZONE && currentIndexRef.current > 0 || diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1);\n  };\n  var startGesture = function startGesture() {\n    onSwipeStart == null ? void 0 : onSwipeStart();\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n    panX.stopAnimation();\n    panX.setOffset(panX._value);\n  };\n  var respondToGesture = function respondToGesture(_, gestureState) {\n    var diffX = layoutDirection === 'rtl' ? -gestureState.dx : gestureState.dx;\n    if (diffX > 0 && index <= 0 || diffX < 0 && index >= routes.length - 1) {\n      return;\n    }\n    if (layout.width) {\n      var _position = (panX._offset + diffX) / -layout.width;\n      var next = _position > index ? Math.ceil(_position) : Math.floor(_position);\n      if (next !== index) {\n        listenersRef.current.forEach(function (listener) {\n          return listener(next);\n        });\n      }\n    }\n    panX.setValue(diffX);\n  };\n  var finishGesture = function finishGesture(_, gestureState) {\n    panX.flattenOffset();\n    onSwipeEnd == null ? void 0 : onSwipeEnd();\n    var currentIndex = typeof pendingIndexRef.current === 'number' ? pendingIndexRef.current : currentIndexRef.current;\n    var nextIndex = currentIndex;\n    if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy) && (Math.abs(gestureState.dx) > swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold)) {\n      nextIndex = Math.round(Math.min(Math.max(0, layoutDirection === 'rtl' ? currentIndex + gestureState.dx / Math.abs(gestureState.dx) : currentIndex - gestureState.dx / Math.abs(gestureState.dx)), routes.length - 1));\n      currentIndexRef.current = nextIndex;\n    }\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n    jumpToIndex(nextIndex, true);\n  };\n  var addEnterListener = useLatestCallback(function (listener) {\n    listenersRef.current.push(listener);\n    return function () {\n      var index = listenersRef.current.indexOf(listener);\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  });\n  var jumpTo = useLatestCallback(function (key) {\n    var index = navigationStateRef.current.routes.findIndex(function (route) {\n      return route.key === key;\n    });\n    jumpToIndex(index);\n    onIndexChange(index);\n  });\n  var panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n      return true;\n    }\n  });\n  var maxTranslate = layout.width * (routes.length - 1);\n  var translateX = Animated.multiply(panX.interpolate({\n    inputRange: [-maxTranslate, 0],\n    outputRange: [-maxTranslate, 0],\n    extrapolate: 'clamp'\n  }), layoutDirection === 'rtl' ? -1 : 1);\n  var position = React.useMemo(function () {\n    return layout.width ? Animated.divide(panX, -layout.width) : null;\n  }, [layout.width, panX]);\n  return children({\n    position: position != null ? position : new Animated.Value(index),\n    addEnterListener: addEnterListener,\n    jumpTo: jumpTo,\n    render: function render(children) {\n      return _jsx(Animated.View, _objectSpread(_objectSpread({\n        style: [styles.sheet, layout.width ? {\n          width: routes.length * layout.width,\n          transform: [{\n            translateX: translateX\n          }]\n        } : null, style]\n      }, panResponder.panHandlers), {}, {\n        children: React.Children.map(children, function (child, i) {\n          var route = routes[i];\n          var focused = i === index;\n          return _jsx(View, {\n            style: layout.width ? {\n              width: layout.width\n            } : focused ? StyleSheet.absoluteFill : null,\n            children: focused || layout.width ? child : null\n          }, route.key);\n        })\n      }));\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch'\n  }\n});","map":{"version":3,"names":["React","Animated","Keyboard","PanResponder","StyleSheet","View","useLatestCallback","useAnimatedValue","jsx","_jsx","DEAD_ZONE","DefaultTransitionSpec","timing","spring","stiffness","damping","mass","overshootClamping","PanResponderAdapter","_ref","layout","_ref$keyboardDismissM","keyboardDismissMode","_ref$swipeEnabled","swipeEnabled","navigationState","onIndexChange","onTabSelect","onSwipeStart","onSwipeEnd","children","style","_ref$animationEnabled","animationEnabled","_ref$layoutDirection","layoutDirection","routes","index","panX","listenersRef","useRef","navigationStateRef","layoutRef","onIndexChangeRef","onTabSelectRef","currentIndexRef","pendingIndexRef","undefined","swipeVelocityThreshold","swipeDistanceThreshold","width","jumpToIndex","animate","arguments","length","offset","current","transitionConfig","_objectWithoutProperties","_excluded","parallel","_objectSpread","toValue","useNativeDriver","start","_ref2","finished","setValue","useEffect","dismiss","isMovingHorizontally","_","gestureState","Math","abs","dx","dy","vx","vy","canMoveScreen","event","diffX","startGesture","stopAnimation","setOffset","_value","respondToGesture","position","_offset","next","ceil","floor","forEach","listener","finishGesture","flattenOffset","currentIndex","nextIndex","round","min","max","isFinite","addEnterListener","push","indexOf","splice","jumpTo","key","findIndex","route","panResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","multiply","interpolate","inputRange","outputRange","extrapolate","useMemo","divide","Value","render","styles","sheet","transform","panHandlers","Children","map","child","i","focused","absoluteFill","flex","flexDirection","alignItems"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/node_modules/react-native-tab-view/src/PanResponderAdapter.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  type GestureResponderEvent,\n  Keyboard,\n  PanResponder,\n  type PanResponderGestureState,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport type {\n  EventEmitterProps,\n  Layout,\n  Listener,\n  NavigationState,\n  PagerProps,\n  Route,\n} from './types';\nimport { useAnimatedValue } from './useAnimatedValue';\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  onTabSelect?: (props: { index: number }) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation<number>;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n};\n\nexport function PanResponderAdapter<T extends Route>({\n  layout,\n  keyboardDismissMode = 'auto',\n  swipeEnabled = true,\n  navigationState,\n  onIndexChange,\n  onTabSelect,\n  onSwipeStart,\n  onSwipeEnd,\n  children,\n  style,\n  animationEnabled = false,\n  layoutDirection = 'ltr',\n}: Props<T>) {\n  const { routes, index } = navigationState;\n\n  const panX = useAnimatedValue(0);\n\n  const listenersRef = React.useRef<Listener[]>([]);\n\n  const navigationStateRef = React.useRef(navigationState);\n  const layoutRef = React.useRef(layout);\n  const onIndexChangeRef = React.useRef(onIndexChange);\n  const onTabSelectRef = React.useRef(onTabSelect);\n  const currentIndexRef = React.useRef(index);\n  const pendingIndexRef = React.useRef<number>(undefined);\n\n  const swipeVelocityThreshold = 0.15;\n  const swipeDistanceThreshold = layout.width / 1.75;\n\n  const jumpToIndex = useLatestCallback(\n    (index: number, animate = animationEnabled) => {\n      const offset = -index * layoutRef.current.width;\n\n      const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n      if (animate) {\n        Animated.parallel([\n          timing(panX, {\n            ...transitionConfig,\n            toValue: offset,\n            useNativeDriver: false,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            onIndexChangeRef.current(index);\n            onTabSelectRef.current?.({ index });\n            pendingIndexRef.current = undefined;\n          }\n        });\n        pendingIndexRef.current = index;\n      } else {\n        panX.setValue(offset);\n        onIndexChangeRef.current(index);\n        onTabSelectRef.current?.({ index });\n        pendingIndexRef.current = undefined;\n      }\n    }\n  );\n\n  React.useEffect(() => {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n    onTabSelectRef.current = onTabSelect;\n  });\n\n  React.useEffect(() => {\n    const offset = -navigationStateRef.current.index * layout.width;\n\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n\n  React.useEffect(() => {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n  const isMovingHorizontally = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  const canMoveScreen = (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    if (swipeEnabled === false) {\n      return false;\n    }\n\n    const diffX =\n      layoutDirection === 'rtl' ? -gestureState.dx : gestureState.dx;\n\n    return (\n      isMovingHorizontally(event, gestureState) &&\n      ((diffX >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1))\n    );\n  };\n\n  const startGesture = () => {\n    onSwipeStart?.();\n\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n\n    panX.stopAnimation();\n    // @ts-expect-error: _value is private, but docs use it as well\n    panX.setOffset(panX._value);\n  };\n\n  const respondToGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    const diffX =\n      layoutDirection === 'rtl' ? -gestureState.dx : gestureState.dx;\n\n    if (\n      // swiping left\n      (diffX > 0 && index <= 0) ||\n      // swiping right\n      (diffX < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    if (layout.width) {\n      // @ts-expect-error: _offset is private, but docs use it as well\n      const position = (panX._offset + diffX) / -layout.width;\n      const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n      if (next !== index) {\n        listenersRef.current.forEach((listener) => listener(next));\n      }\n    }\n\n    panX.setValue(diffX);\n  };\n\n  const finishGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    panX.flattenOffset();\n\n    onSwipeEnd?.();\n\n    const currentIndex =\n      typeof pendingIndexRef.current === 'number'\n        ? pendingIndexRef.current\n        : currentIndexRef.current;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            layoutDirection === 'rtl'\n              ? currentIndex + gestureState.dx / Math.abs(gestureState.dx)\n              : currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          routes.length - 1\n        )\n      );\n\n      currentIndexRef.current = nextIndex;\n    }\n\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n\n    jumpToIndex(nextIndex, true);\n  };\n\n  const addEnterListener = useLatestCallback((listener: Listener) => {\n    listenersRef.current.push(listener);\n\n    return () => {\n      const index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  });\n\n  const jumpTo = useLatestCallback((key: string) => {\n    const index = navigationStateRef.current.routes.findIndex(\n      (route: { key: string }) => route.key === key\n    );\n\n    jumpToIndex(index);\n    onIndexChange(index);\n  });\n\n  const panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  const maxTranslate = layout.width * (routes.length - 1);\n  const translateX = Animated.multiply(\n    panX.interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp',\n    }),\n    layoutDirection === 'rtl' ? -1 : 1\n  );\n\n  const position = React.useMemo(\n    () => (layout.width ? Animated.divide(panX, -layout.width) : null),\n    [layout.width, panX]\n  );\n\n  return children({\n    position: position ?? new Animated.Value(index),\n    addEnterListener,\n    jumpTo,\n    render: (children) => (\n      <Animated.View\n        style={[\n          styles.sheet,\n          layout.width\n            ? {\n                width: routes.length * layout.width,\n                transform: [{ translateX }],\n              }\n            : null,\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = routes[i];\n          const focused = i === index;\n\n          return (\n            <View\n              key={route.key}\n              style={\n                layout.width\n                  ? { width: layout.width }\n                  : focused\n                    ? StyleSheet.absoluteFill\n                    : null\n              }\n            >\n              {focused || layout.width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    ),\n  });\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}