{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { getApp } from '@react-native-firebase/app';\nimport { fetchPasswordPolicy } from '../password-policy/passwordPolicyApi';\nimport { PasswordPolicyImpl } from '../password-policy/PasswordPolicyImpl';\nimport FacebookAuthProvider from '../providers/FacebookAuthProvider';\nimport { MultiFactorUser } from '../multiFactor';\nimport { MODULAR_DEPRECATION_ARG } from '@react-native-firebase/app/lib/common';\nexport function getAuth(app) {\n  if (app) {\n    return getApp(app.name).auth();\n  }\n  return getApp().auth();\n}\nexport function initializeAuth(app, deps) {\n  if (app) {\n    return getApp(app.name).auth();\n  }\n  return getApp().auth();\n}\nexport function applyActionCode(_x, _x2) {\n  return _applyActionCode.apply(this, arguments);\n}\nfunction _applyActionCode() {\n  _applyActionCode = _asyncToGenerator(function* (auth, oobCode) {\n    return auth.applyActionCode.call(auth, oobCode, MODULAR_DEPRECATION_ARG);\n  });\n  return _applyActionCode.apply(this, arguments);\n}\nexport function beforeAuthStateChanged(auth, callback, onAbort) {\n  throw new Error('beforeAuthStateChanged is unsupported by the native Firebase SDKs');\n}\nexport function checkActionCode(_x3, _x4) {\n  return _checkActionCode.apply(this, arguments);\n}\nfunction _checkActionCode() {\n  _checkActionCode = _asyncToGenerator(function* (auth, oobCode) {\n    return auth.checkActionCode.call(auth, oobCode, MODULAR_DEPRECATION_ARG);\n  });\n  return _checkActionCode.apply(this, arguments);\n}\nexport function confirmPasswordReset(_x5, _x6, _x7) {\n  return _confirmPasswordReset.apply(this, arguments);\n}\nfunction _confirmPasswordReset() {\n  _confirmPasswordReset = _asyncToGenerator(function* (auth, oobCode, newPassword) {\n    return auth.confirmPasswordReset.call(auth, oobCode, newPassword, MODULAR_DEPRECATION_ARG);\n  });\n  return _confirmPasswordReset.apply(this, arguments);\n}\nexport function connectAuthEmulator(auth, url, options) {\n  auth.useEmulator.call(auth, url, options, MODULAR_DEPRECATION_ARG);\n}\nexport function createUserWithEmailAndPassword(_x8, _x9, _x0) {\n  return _createUserWithEmailAndPassword.apply(this, arguments);\n}\nfunction _createUserWithEmailAndPassword() {\n  _createUserWithEmailAndPassword = _asyncToGenerator(function* (auth, email, password) {\n    return auth.createUserWithEmailAndPassword.call(auth, email, password, MODULAR_DEPRECATION_ARG);\n  });\n  return _createUserWithEmailAndPassword.apply(this, arguments);\n}\nexport function fetchSignInMethodsForEmail(_x1, _x10) {\n  return _fetchSignInMethodsForEmail.apply(this, arguments);\n}\nfunction _fetchSignInMethodsForEmail() {\n  _fetchSignInMethodsForEmail = _asyncToGenerator(function* (auth, email) {\n    return auth.fetchSignInMethodsForEmail.call(auth, email, MODULAR_DEPRECATION_ARG);\n  });\n  return _fetchSignInMethodsForEmail.apply(this, arguments);\n}\nexport function getMultiFactorResolver(auth, error) {\n  return auth.getMultiFactorResolver.call(auth, error, MODULAR_DEPRECATION_ARG);\n}\nexport function getRedirectResult(_x11, _x12) {\n  return _getRedirectResult.apply(this, arguments);\n}\nfunction _getRedirectResult() {\n  _getRedirectResult = _asyncToGenerator(function* (auth, resolver) {\n    throw new Error('getRedirectResult is unsupported by the native Firebase SDKs');\n  });\n  return _getRedirectResult.apply(this, arguments);\n}\nexport function isSignInWithEmailLink(auth, emailLink) {\n  return auth.isSignInWithEmailLink.call(auth, emailLink, MODULAR_DEPRECATION_ARG);\n}\nexport function onAuthStateChanged(auth, nextOrObserver) {\n  return auth.onAuthStateChanged.call(auth, nextOrObserver, MODULAR_DEPRECATION_ARG);\n}\nexport function onIdTokenChanged(auth, nextOrObserver) {\n  return auth.onIdTokenChanged.call(auth, nextOrObserver, MODULAR_DEPRECATION_ARG);\n}\nexport function revokeAccessToken(_x13, _x14) {\n  return _revokeAccessToken.apply(this, arguments);\n}\nfunction _revokeAccessToken() {\n  _revokeAccessToken = _asyncToGenerator(function* (auth, token) {\n    throw new Error('revokeAccessToken() is only supported on Web');\n  });\n  return _revokeAccessToken.apply(this, arguments);\n}\nexport function sendPasswordResetEmail(_x15, _x16, _x17) {\n  return _sendPasswordResetEmail.apply(this, arguments);\n}\nfunction _sendPasswordResetEmail() {\n  _sendPasswordResetEmail = _asyncToGenerator(function* (auth, email, actionCodeSettings) {\n    return auth.sendPasswordResetEmail.call(auth, email, actionCodeSettings, MODULAR_DEPRECATION_ARG);\n  });\n  return _sendPasswordResetEmail.apply(this, arguments);\n}\nexport function sendSignInLinkToEmail(_x18, _x19, _x20) {\n  return _sendSignInLinkToEmail.apply(this, arguments);\n}\nfunction _sendSignInLinkToEmail() {\n  _sendSignInLinkToEmail = _asyncToGenerator(function* (auth, email, actionCodeSettings) {\n    return auth.sendSignInLinkToEmail.call(auth, email, actionCodeSettings, MODULAR_DEPRECATION_ARG);\n  });\n  return _sendSignInLinkToEmail.apply(this, arguments);\n}\nexport function setPersistence(_x21, _x22) {\n  return _setPersistence.apply(this, arguments);\n}\nfunction _setPersistence() {\n  _setPersistence = _asyncToGenerator(function* (auth, persistence) {\n    throw new Error('setPersistence is unsupported by the native Firebase SDKs');\n  });\n  return _setPersistence.apply(this, arguments);\n}\nexport function signInAnonymously(_x23) {\n  return _signInAnonymously.apply(this, arguments);\n}\nfunction _signInAnonymously() {\n  _signInAnonymously = _asyncToGenerator(function* (auth) {\n    return auth.signInAnonymously.call(auth, MODULAR_DEPRECATION_ARG);\n  });\n  return _signInAnonymously.apply(this, arguments);\n}\nexport function signInWithCredential(_x24, _x25) {\n  return _signInWithCredential.apply(this, arguments);\n}\nfunction _signInWithCredential() {\n  _signInWithCredential = _asyncToGenerator(function* (auth, credential) {\n    return auth.signInWithCredential.call(auth, credential, MODULAR_DEPRECATION_ARG);\n  });\n  return _signInWithCredential.apply(this, arguments);\n}\nexport function signInWithCustomToken(_x26, _x27) {\n  return _signInWithCustomToken.apply(this, arguments);\n}\nfunction _signInWithCustomToken() {\n  _signInWithCustomToken = _asyncToGenerator(function* (auth, customToken) {\n    return auth.signInWithCustomToken.call(auth, customToken, MODULAR_DEPRECATION_ARG);\n  });\n  return _signInWithCustomToken.apply(this, arguments);\n}\nexport function signInWithEmailAndPassword(_x28, _x29, _x30) {\n  return _signInWithEmailAndPassword.apply(this, arguments);\n}\nfunction _signInWithEmailAndPassword() {\n  _signInWithEmailAndPassword = _asyncToGenerator(function* (auth, email, password) {\n    return auth.signInWithEmailAndPassword.call(auth, email, password, MODULAR_DEPRECATION_ARG);\n  });\n  return _signInWithEmailAndPassword.apply(this, arguments);\n}\nexport function signInWithEmailLink(_x31, _x32, _x33) {\n  return _signInWithEmailLink.apply(this, arguments);\n}\nfunction _signInWithEmailLink() {\n  _signInWithEmailLink = _asyncToGenerator(function* (auth, email, emailLink) {\n    return auth.signInWithEmailLink.call(auth, email, emailLink, MODULAR_DEPRECATION_ARG);\n  });\n  return _signInWithEmailLink.apply(this, arguments);\n}\nexport function signInWithPhoneNumber(_x34, _x35, _x36) {\n  return _signInWithPhoneNumber.apply(this, arguments);\n}\nfunction _signInWithPhoneNumber() {\n  _signInWithPhoneNumber = _asyncToGenerator(function* (auth, phoneNumber, appVerifier) {\n    return auth.signInWithPhoneNumber.call(auth, phoneNumber, appVerifier, MODULAR_DEPRECATION_ARG);\n  });\n  return _signInWithPhoneNumber.apply(this, arguments);\n}\nexport function verifyPhoneNumber(auth, phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n  return auth.verifyPhoneNumber.call(auth, phoneNumber, autoVerifyTimeoutOrForceResend, forceResend, MODULAR_DEPRECATION_ARG);\n}\nexport function signInWithPopup(_x37, _x38, _x39) {\n  return _signInWithPopup.apply(this, arguments);\n}\nfunction _signInWithPopup() {\n  _signInWithPopup = _asyncToGenerator(function* (auth, provider, resolver) {\n    return auth.signInWithPopup.call(auth, provider, resolver, MODULAR_DEPRECATION_ARG);\n  });\n  return _signInWithPopup.apply(this, arguments);\n}\nexport function signInWithRedirect(_x40, _x41, _x42) {\n  return _signInWithRedirect.apply(this, arguments);\n}\nfunction _signInWithRedirect() {\n  _signInWithRedirect = _asyncToGenerator(function* (auth, provider, resolver) {\n    return auth.signInWithRedirect.call(auth, provider, resolver, MODULAR_DEPRECATION_ARG);\n  });\n  return _signInWithRedirect.apply(this, arguments);\n}\nexport function signOut(_x43) {\n  return _signOut.apply(this, arguments);\n}\nfunction _signOut() {\n  _signOut = _asyncToGenerator(function* (auth) {\n    return auth.signOut.call(auth, MODULAR_DEPRECATION_ARG);\n  });\n  return _signOut.apply(this, arguments);\n}\nexport function updateCurrentUser(_x44, _x45) {\n  return _updateCurrentUser.apply(this, arguments);\n}\nfunction _updateCurrentUser() {\n  _updateCurrentUser = _asyncToGenerator(function* (auth, user) {\n    throw new Error('updateCurrentUser is unsupported by the native Firebase SDKs');\n  });\n  return _updateCurrentUser.apply(this, arguments);\n}\nexport function useDeviceLanguage(auth) {\n  throw new Error('useDeviceLanguage is unsupported by the native Firebase SDKs');\n}\nexport function setLanguageCode(auth, languageCode) {\n  return auth.setLanguageCode.call(auth, languageCode, MODULAR_DEPRECATION_ARG);\n}\nexport function useUserAccessGroup(auth, userAccessGroup) {\n  return auth.useUserAccessGroup.call(auth, userAccessGroup, MODULAR_DEPRECATION_ARG);\n}\nexport function verifyPasswordResetCode(_x46, _x47) {\n  return _verifyPasswordResetCode.apply(this, arguments);\n}\nfunction _verifyPasswordResetCode() {\n  _verifyPasswordResetCode = _asyncToGenerator(function* (auth, code) {\n    return auth.verifyPasswordResetCode.call(auth, code, MODULAR_DEPRECATION_ARG);\n  });\n  return _verifyPasswordResetCode.apply(this, arguments);\n}\nexport function parseActionCodeURL(link) {\n  throw new Error('parseActionCodeURL is unsupported by the native Firebase SDKs');\n}\nexport function deleteUser(_x48) {\n  return _deleteUser.apply(this, arguments);\n}\nfunction _deleteUser() {\n  _deleteUser = _asyncToGenerator(function* (user) {\n    return user.delete.call(user, MODULAR_DEPRECATION_ARG);\n  });\n  return _deleteUser.apply(this, arguments);\n}\nexport function getIdToken(_x49, _x50) {\n  return _getIdToken.apply(this, arguments);\n}\nfunction _getIdToken() {\n  _getIdToken = _asyncToGenerator(function* (user, forceRefresh) {\n    return user.getIdToken.call(user, forceRefresh, MODULAR_DEPRECATION_ARG);\n  });\n  return _getIdToken.apply(this, arguments);\n}\nexport function getIdTokenResult(_x51, _x52) {\n  return _getIdTokenResult.apply(this, arguments);\n}\nfunction _getIdTokenResult() {\n  _getIdTokenResult = _asyncToGenerator(function* (user, forceRefresh) {\n    return user.getIdTokenResult.call(user, forceRefresh, MODULAR_DEPRECATION_ARG);\n  });\n  return _getIdTokenResult.apply(this, arguments);\n}\nexport function linkWithCredential(_x53, _x54) {\n  return _linkWithCredential.apply(this, arguments);\n}\nfunction _linkWithCredential() {\n  _linkWithCredential = _asyncToGenerator(function* (user, credential) {\n    return user.linkWithCredential.call(user, credential, MODULAR_DEPRECATION_ARG);\n  });\n  return _linkWithCredential.apply(this, arguments);\n}\nexport function linkWithPhoneNumber(_x55, _x56, _x57) {\n  return _linkWithPhoneNumber.apply(this, arguments);\n}\nfunction _linkWithPhoneNumber() {\n  _linkWithPhoneNumber = _asyncToGenerator(function* (user, phoneNumber, appVerifier) {\n    throw new Error('linkWithPhoneNumber is unsupported by the native Firebase SDKs');\n  });\n  return _linkWithPhoneNumber.apply(this, arguments);\n}\nexport function linkWithPopup(_x58, _x59, _x60) {\n  return _linkWithPopup.apply(this, arguments);\n}\nfunction _linkWithPopup() {\n  _linkWithPopup = _asyncToGenerator(function* (user, provider, resolver) {\n    return user.linkWithPopup.call(user, provider, resolver, MODULAR_DEPRECATION_ARG);\n  });\n  return _linkWithPopup.apply(this, arguments);\n}\nexport function linkWithRedirect(_x61, _x62, _x63) {\n  return _linkWithRedirect.apply(this, arguments);\n}\nfunction _linkWithRedirect() {\n  _linkWithRedirect = _asyncToGenerator(function* (user, provider, resolver) {\n    return user.linkWithRedirect.call(user, provider, resolver, MODULAR_DEPRECATION_ARG);\n  });\n  return _linkWithRedirect.apply(this, arguments);\n}\nexport function multiFactor(user) {\n  return new MultiFactorUser(getAuth(), user);\n}\nexport function reauthenticateWithCredential(_x64, _x65) {\n  return _reauthenticateWithCredential.apply(this, arguments);\n}\nfunction _reauthenticateWithCredential() {\n  _reauthenticateWithCredential = _asyncToGenerator(function* (user, credential) {\n    return user.reauthenticateWithCredential.call(user, credential, MODULAR_DEPRECATION_ARG);\n  });\n  return _reauthenticateWithCredential.apply(this, arguments);\n}\nexport function reauthenticateWithPhoneNumber(_x66, _x67, _x68) {\n  return _reauthenticateWithPhoneNumber.apply(this, arguments);\n}\nfunction _reauthenticateWithPhoneNumber() {\n  _reauthenticateWithPhoneNumber = _asyncToGenerator(function* (user, phoneNumber, appVerifier) {\n    throw new Error('reauthenticateWithPhoneNumber is unsupported by the native Firebase SDKs');\n  });\n  return _reauthenticateWithPhoneNumber.apply(this, arguments);\n}\nexport function reauthenticateWithPopup(_x69, _x70, _x71) {\n  return _reauthenticateWithPopup.apply(this, arguments);\n}\nfunction _reauthenticateWithPopup() {\n  _reauthenticateWithPopup = _asyncToGenerator(function* (user, provider, resolver) {\n    return user.reauthenticateWithPopup.call(user, provider, resolver, MODULAR_DEPRECATION_ARG);\n  });\n  return _reauthenticateWithPopup.apply(this, arguments);\n}\nexport function reauthenticateWithRedirect(_x72, _x73, _x74) {\n  return _reauthenticateWithRedirect.apply(this, arguments);\n}\nfunction _reauthenticateWithRedirect() {\n  _reauthenticateWithRedirect = _asyncToGenerator(function* (user, provider, resolver) {\n    return user.reauthenticateWithRedirect.call(user, provider, resolver, MODULAR_DEPRECATION_ARG);\n  });\n  return _reauthenticateWithRedirect.apply(this, arguments);\n}\nexport function reload(_x75) {\n  return _reload.apply(this, arguments);\n}\nfunction _reload() {\n  _reload = _asyncToGenerator(function* (user) {\n    return user.reload.call(user, MODULAR_DEPRECATION_ARG);\n  });\n  return _reload.apply(this, arguments);\n}\nexport function sendEmailVerification(_x76, _x77) {\n  return _sendEmailVerification.apply(this, arguments);\n}\nfunction _sendEmailVerification() {\n  _sendEmailVerification = _asyncToGenerator(function* (user, actionCodeSettings) {\n    return user.sendEmailVerification.call(user, actionCodeSettings, MODULAR_DEPRECATION_ARG);\n  });\n  return _sendEmailVerification.apply(this, arguments);\n}\nexport function unlink(_x78, _x79) {\n  return _unlink.apply(this, arguments);\n}\nfunction _unlink() {\n  _unlink = _asyncToGenerator(function* (user, providerId) {\n    return user.unlink.call(user, providerId, MODULAR_DEPRECATION_ARG);\n  });\n  return _unlink.apply(this, arguments);\n}\nexport function updateEmail(_x80, _x81) {\n  return _updateEmail.apply(this, arguments);\n}\nfunction _updateEmail() {\n  _updateEmail = _asyncToGenerator(function* (user, newEmail) {\n    return user.updateEmail.call(user, newEmail, MODULAR_DEPRECATION_ARG);\n  });\n  return _updateEmail.apply(this, arguments);\n}\nexport function updatePassword(_x82, _x83) {\n  return _updatePassword.apply(this, arguments);\n}\nfunction _updatePassword() {\n  _updatePassword = _asyncToGenerator(function* (user, newPassword) {\n    return user.updatePassword.call(user, newPassword, MODULAR_DEPRECATION_ARG);\n  });\n  return _updatePassword.apply(this, arguments);\n}\nexport function updatePhoneNumber(_x84, _x85) {\n  return _updatePhoneNumber.apply(this, arguments);\n}\nfunction _updatePhoneNumber() {\n  _updatePhoneNumber = _asyncToGenerator(function* (user, credential) {\n    return user.updatePhoneNumber.call(user, credential, MODULAR_DEPRECATION_ARG);\n  });\n  return _updatePhoneNumber.apply(this, arguments);\n}\nexport function updateProfile(_x86, _x87) {\n  return _updateProfile.apply(this, arguments);\n}\nfunction _updateProfile() {\n  _updateProfile = _asyncToGenerator(function* (user, _ref) {\n    var displayName = _ref.displayName,\n      photoUrl = _ref.photoURL;\n    return user.updateProfile.call(user, {\n      displayName: displayName,\n      photoURL: photoUrl\n    }, MODULAR_DEPRECATION_ARG);\n  });\n  return _updateProfile.apply(this, arguments);\n}\nexport function verifyBeforeUpdateEmail(_x88, _x89, _x90) {\n  return _verifyBeforeUpdateEmail.apply(this, arguments);\n}\nfunction _verifyBeforeUpdateEmail() {\n  _verifyBeforeUpdateEmail = _asyncToGenerator(function* (user, newEmail, actionCodeSettings) {\n    return user.verifyBeforeUpdateEmail.call(user, newEmail, actionCodeSettings, MODULAR_DEPRECATION_ARG);\n  });\n  return _verifyBeforeUpdateEmail.apply(this, arguments);\n}\nexport function getAdditionalUserInfo(userCredential) {\n  return userCredential.additionalUserInfo;\n}\nexport function getCustomAuthDomain(auth) {\n  return auth.getCustomAuthDomain.call(auth, MODULAR_DEPRECATION_ARG);\n}\nexport function validatePassword(_x91, _x92) {\n  return _validatePassword.apply(this, arguments);\n}\nfunction _validatePassword() {\n  _validatePassword = _asyncToGenerator(function* (auth, password) {\n    if (password === null || password === undefined) {\n      throw new Error(\"firebase.auth().validatePassword(*) expected 'password' to be a non-null or a defined value.\");\n    }\n    var passwordPolicy = yield fetchPasswordPolicy(auth);\n    var passwordPolicyImpl = yield new PasswordPolicyImpl(passwordPolicy);\n    var status = passwordPolicyImpl.validatePassword(password);\n    return status;\n  });\n  return _validatePassword.apply(this, arguments);\n}","map":{"version":3,"names":["getApp","fetchPasswordPolicy","PasswordPolicyImpl","FacebookAuthProvider","MultiFactorUser","MODULAR_DEPRECATION_ARG","getAuth","app","name","auth","initializeAuth","deps","applyActionCode","_x","_x2","_applyActionCode","apply","arguments","_asyncToGenerator","oobCode","call","beforeAuthStateChanged","callback","onAbort","Error","checkActionCode","_x3","_x4","_checkActionCode","confirmPasswordReset","_x5","_x6","_x7","_confirmPasswordReset","newPassword","connectAuthEmulator","url","options","useEmulator","createUserWithEmailAndPassword","_x8","_x9","_x0","_createUserWithEmailAndPassword","email","password","fetchSignInMethodsForEmail","_x1","_x10","_fetchSignInMethodsForEmail","getMultiFactorResolver","error","getRedirectResult","_x11","_x12","_getRedirectResult","resolver","isSignInWithEmailLink","emailLink","onAuthStateChanged","nextOrObserver","onIdTokenChanged","revokeAccessToken","_x13","_x14","_revokeAccessToken","token","sendPasswordResetEmail","_x15","_x16","_x17","_sendPasswordResetEmail","actionCodeSettings","sendSignInLinkToEmail","_x18","_x19","_x20","_sendSignInLinkToEmail","setPersistence","_x21","_x22","_setPersistence","persistence","signInAnonymously","_x23","_signInAnonymously","signInWithCredential","_x24","_x25","_signInWithCredential","credential","signInWithCustomToken","_x26","_x27","_signInWithCustomToken","customToken","signInWithEmailAndPassword","_x28","_x29","_x30","_signInWithEmailAndPassword","signInWithEmailLink","_x31","_x32","_x33","_signInWithEmailLink","signInWithPhoneNumber","_x34","_x35","_x36","_signInWithPhoneNumber","phoneNumber","appVerifier","verifyPhoneNumber","autoVerifyTimeoutOrForceResend","forceResend","signInWithPopup","_x37","_x38","_x39","_signInWithPopup","provider","signInWithRedirect","_x40","_x41","_x42","_signInWithRedirect","signOut","_x43","_signOut","updateCurrentUser","_x44","_x45","_updateCurrentUser","user","useDeviceLanguage","setLanguageCode","languageCode","useUserAccessGroup","userAccessGroup","verifyPasswordResetCode","_x46","_x47","_verifyPasswordResetCode","code","parseActionCodeURL","link","deleteUser","_x48","_deleteUser","delete","getIdToken","_x49","_x50","_getIdToken","forceRefresh","getIdTokenResult","_x51","_x52","_getIdTokenResult","linkWithCredential","_x53","_x54","_linkWithCredential","linkWithPhoneNumber","_x55","_x56","_x57","_linkWithPhoneNumber","linkWithPopup","_x58","_x59","_x60","_linkWithPopup","linkWithRedirect","_x61","_x62","_x63","_linkWithRedirect","multiFactor","reauthenticateWithCredential","_x64","_x65","_reauthenticateWithCredential","reauthenticateWithPhoneNumber","_x66","_x67","_x68","_reauthenticateWithPhoneNumber","reauthenticateWithPopup","_x69","_x70","_x71","_reauthenticateWithPopup","reauthenticateWithRedirect","_x72","_x73","_x74","_reauthenticateWithRedirect","reload","_x75","_reload","sendEmailVerification","_x76","_x77","_sendEmailVerification","unlink","_x78","_x79","_unlink","providerId","updateEmail","_x80","_x81","_updateEmail","newEmail","updatePassword","_x82","_x83","_updatePassword","updatePhoneNumber","_x84","_x85","_updatePhoneNumber","updateProfile","_x86","_x87","_updateProfile","_ref","displayName","photoUrl","photoURL","verifyBeforeUpdateEmail","_x88","_x89","_x90","_verifyBeforeUpdateEmail","getAdditionalUserInfo","userCredential","additionalUserInfo","getCustomAuthDomain","validatePassword","_x91","_x92","_validatePassword","undefined","passwordPolicy","passwordPolicyImpl","status"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/node_modules/@react-native-firebase/auth/lib/modular/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getApp } from '@react-native-firebase/app';\nimport { fetchPasswordPolicy } from '../password-policy/passwordPolicyApi';\nimport { PasswordPolicyImpl } from '../password-policy/PasswordPolicyImpl';\nimport FacebookAuthProvider from '../providers/FacebookAuthProvider';\nimport { MultiFactorUser } from '../multiFactor';\nimport { MODULAR_DEPRECATION_ARG } from '@react-native-firebase/app/lib/common';\n\n/**\n * @typedef {import('@firebase/app-types').FirebaseApp} FirebaseApp\n * @typedef {import('..').FirebaseAuthTypes} FirebaseAuthTypes\n * @typedef {import('..').FirebaseAuthTypes.Module} Auth\n * @typedef {import('..').FirebaseAuthTypes.CallbackOrObserver} CallbackOrObserver\n * @typedef {import('..').FirebaseAuthTypes.AuthListenerCallback} AuthListenerCallback\n * @typedef {import('..').FirebaseAuthTypes.ActionCodeInfo} ActionCodeInfo\n * @typedef {import('..').FirebaseAuthTypes.UserCredential} UserCredential\n * @typedef {import('..').FirebaseAuthTypes.MultiFactorError} MultiFactorError\n * @typedef {import('..').FirebaseAuthTypes.MultiFactorUser} MultiFactorUser\n * @typedef {import('..').FirebaseAuthTypes.MultiFactorResolver} MultiFactorResolver\n * @typedef {import('..').FirebaseAuthTypes.ConfirmationResult} ConfirmationResult\n * @typedef {import('..').FirebaseAuthTypes.AuthCredential} AuthCredential\n * @typedef {import('..').FirebaseAuthTypes.AuthProvider} AuthProvider\n * @typedef {import('..').FirebaseAuthTypes.PhoneAuthListener} PhoneAuthListener\n * @typedef {import('..').FirebaseAuthTypes.ActionCodeSettings} ActionCodeSettings\n * @typedef {import('..').FirebaseAuthTypes.User} User\n * @typedef {import('..').FirebaseAuthTypes.IdTokenResult} IdTokenResult\n * @typedef {import('..').FirebaseAuthTypes.AdditionalUserInfo} AdditionalUserInfo\n * @typedef {import('..').FirebaseAuthTypes.ActionCodeURL} ActionCodeURL\n * @typedef {import('..').FirebaseAuthTypes.ApplicationVerifier} ApplicationVerifier\n */\n\n/**\n * Returns the Auth instance associated with the provided FirebaseApp.\n * @param {FirebaseApp} [app] - The Firebase app instance.\n * @returns {Auth}\n */\nexport function getAuth(app) {\n  if (app) {\n    return getApp(app.name).auth();\n  }\n  return getApp().auth();\n}\n\n/**\n * This function allows more control over the Auth instance than getAuth().\n * @param {FirebaseApp} app - The Firebase app instance.\n * @param {any} [deps] - Optional. Dependencies for the Auth instance.\n * @returns {Auth}\n */\nexport function initializeAuth(app, deps) {\n  if (app) {\n    return getApp(app.name).auth();\n  }\n  return getApp().auth();\n}\n\n/**\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n * @param {Auth} auth - The Auth instance.\n * @param {string} oobCode - The out-of-band code sent to the user.\n * @returns {Promise<void>}\n */\nexport async function applyActionCode(auth, oobCode) {\n  return auth.applyActionCode.call(auth, oobCode, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Adds a blocking callback that runs before an auth state change sets a new user.\n * @param {Auth} auth - The Auth instance.\n * @param {(user: User | null) => void} callback - A callback function to run before the auth state changes.\n * @param {() => void} [onAbort] - Optional. A callback function to run if the operation is aborted.\n */\nexport function beforeAuthStateChanged(auth, callback, onAbort) {\n  throw new Error('beforeAuthStateChanged is unsupported by the native Firebase SDKs');\n}\n\n/**\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n * @param {Auth} auth - The Auth instance.\n * @param {string} oobCode - The out-of-band code sent to the user.\n * @returns {Promise<ActionCodeInfo>}\n */\nexport async function checkActionCode(auth, oobCode) {\n  return auth.checkActionCode.call(auth, oobCode, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Completes the password reset process, given a confirmation code and new password.\n * @param {Auth} auth - The Auth instance.\n * @param {string} oobCode - The out-of-band code sent to the user.\n * @param {string} newPassword - The new password.\n * @returns {Promise<void>}\n */\nexport async function confirmPasswordReset(auth, oobCode, newPassword) {\n  return auth.confirmPasswordReset.call(auth, oobCode, newPassword, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Changes the Auth instance to communicate with the Firebase Auth Emulator, instead of production Firebase Auth services.\n * @param {Auth} auth - The Auth instance.\n * @param {string} url - The URL of the Firebase Auth Emulator.\n * @param {{ disableWarnings: boolean }} [options] - Optional. Options for the emulator connection.\n */\nexport function connectAuthEmulator(auth, url, options) {\n  auth.useEmulator.call(auth, url, options, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Creates a new user account associated with the specified email address and password.\n * @param {Auth} auth - The Auth instance.\n * @param {string} email - The user's email address.\n * @param {string} password - The user's password.\n * @returns {Promise<UserCredential>}\n */\nexport async function createUserWithEmailAndPassword(auth, email, password) {\n  return auth.createUserWithEmailAndPassword.call(auth, email, password, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Gets the list of possible sign in methods for the given email address.\n * @param {Auth} auth - The Auth instance.\n * @param {string} email - The user's email address.\n * @returns {Promise<string[]>}\n */\nexport async function fetchSignInMethodsForEmail(auth, email) {\n  return auth.fetchSignInMethodsForEmail.call(auth, email, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Provides a MultiFactorResolver suitable for completion of a multi-factor flow.\n * @param {Auth} auth - The Auth instance.\n * @param {MultiFactorError} error - The multi-factor error.\n * @returns {MultiFactorResolver}\n */\nexport function getMultiFactorResolver(auth, error) {\n  return auth.getMultiFactorResolver.call(auth, error, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Returns a UserCredential from the redirect-based sign-in flow.\n * @param {Auth} auth - The Auth instance.\n * @param {PopupRedirectResolver} [resolver] - Optional. The popup redirect resolver.\n * @returns {Promise<UserCredential | null>}\n */\nexport async function getRedirectResult(auth, resolver) {\n  throw new Error('getRedirectResult is unsupported by the native Firebase SDKs');\n}\n\n/**\n * Checks if an incoming link is a sign-in with email link suitable for signInWithEmailLink().\n * @param {Auth} auth - The Auth instance.\n * @param {string} emailLink - The email link to check.\n * @returns {Promise<boolean>}\n */\nexport function isSignInWithEmailLink(auth, emailLink) {\n  return auth.isSignInWithEmailLink.call(auth, emailLink, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Adds an observer for changes to the user's sign-in state.\n * @param {Auth} auth - The Auth instance.\n * @param {CallbackOrObserver<AuthListenerCallback>} nextOrObserver - A callback function or observer for auth state changes.\n * @returns {() => void}\n */\nexport function onAuthStateChanged(auth, nextOrObserver) {\n  return auth.onAuthStateChanged.call(auth, nextOrObserver, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n * @param {Auth} auth - The Auth instance.\n * @param {CallbackOrObserver<AuthListenerCallback>} nextOrObserver - A callback function or observer for ID token changes.\n * @returns {() => void}\n */\nexport function onIdTokenChanged(auth, nextOrObserver) {\n  return auth.onIdTokenChanged.call(auth, nextOrObserver, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Revoke the given access token, Currently only supports Apple OAuth access tokens.\n * @param auth - The Auth Instance.\n * @param token - The Access Token\n */\nexport async function revokeAccessToken(auth, token) {\n  throw new Error('revokeAccessToken() is only supported on Web');\n} //TO DO: Add Support\n\n/**\n * Sends a password reset email to the given email address.\n * @param {Auth} auth - The Auth instance.\n * @param {string} email - The user's email address.\n * @param {ActionCodeSettings} [actionCodeSettings] - Optional. Action code settings.\n * @returns {Promise<void>}\n */\nexport async function sendPasswordResetEmail(auth, email, actionCodeSettings) {\n  return auth.sendPasswordResetEmail.call(auth, email, actionCodeSettings, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Sends a sign-in email link to the user with the specified email.\n * @param {Auth} auth - The Auth instance.\n * @param {string} email - The user's email address.\n * @param {ActionCodeSettings} [actionCodeSettings] - Optional. Action code settings.\n * @returns {Promise<void>}\n */\nexport async function sendSignInLinkToEmail(auth, email, actionCodeSettings) {\n  return auth.sendSignInLinkToEmail.call(auth, email, actionCodeSettings, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Changes the type of persistence on the Auth instance for the currently saved Auth session and applies this type of persistence for future sign-in requests, including sign-in with redirect requests.\n * @param {Auth} auth - The Auth instance.\n * @param {Persistence} persistence - The persistence type.\n * @returns {Promise<void>}\n */\nexport async function setPersistence(auth, persistence) {\n  throw new Error('setPersistence is unsupported by the native Firebase SDKs');\n}\n\n/**\n * Asynchronously signs in as an anonymous user.\n * @param {Auth} auth - The Auth instance.\n * @returns {Promise<UserCredential>}\n */\nexport async function signInAnonymously(auth) {\n  return auth.signInAnonymously.call(auth, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n * @param {Auth} auth - The Auth instance.\n * @param {AuthCredential} credential - The auth credentials.\n * @returns {Promise<UserCredential>}\n */\nexport async function signInWithCredential(auth, credential) {\n  return auth.signInWithCredential.call(auth, credential, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Asynchronously signs in using a custom token.\n * @param {Auth} auth - The Auth instance.\n * @param {string} customToken - The custom token.\n * @returns {Promise<UserCredential>}\n */\nexport async function signInWithCustomToken(auth, customToken) {\n  return auth.signInWithCustomToken.call(auth, customToken, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Asynchronously signs in using an email and password.\n * @param {Auth} auth - The Auth instance.\n * @param {string} email - The user's email address.\n * @param {string} password - The user's password.\n * @returns {Promise<UserCredential>}\n */\nexport async function signInWithEmailAndPassword(auth, email, password) {\n  return auth.signInWithEmailAndPassword.call(auth, email, password, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Asynchronously signs in using an email and sign-in email link.\n * @param {Auth} auth - The Auth instance.\n * @param {string} email - The user's email address.\n * @param {string} emailLink - The email link.\n * @returns {Promise<UserCredential>}\n */\nexport async function signInWithEmailLink(auth, email, emailLink) {\n  return auth.signInWithEmailLink.call(auth, email, emailLink, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Asynchronously signs in using a phone number.\n * @param {Auth} auth - The Auth instance.\n * @param {string} phoneNumber - The user's phone number.\n * @param {ApplicationVerifier} appVerifier - The application verifier.\n * @returns {Promise<ConfirmationResult>}\n */\nexport async function signInWithPhoneNumber(auth, phoneNumber, appVerifier) {\n  return auth.signInWithPhoneNumber.call(auth, phoneNumber, appVerifier, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Asynchronously verifies a phone number.\n * @param {Auth} auth - The Auth instance.\n * @param {string} phoneNumber - The user's phone number.\n * @param {number | boolean} autoVerifyTimeoutOrForceResend - The auto verify timeout or force resend flag.\n * @param {boolean} [forceResend] - Optional. Whether to force resend.\n * @returns {PhoneAuthListener}\n */\nexport function verifyPhoneNumber(auth, phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n  return auth.verifyPhoneNumber.call(\n    auth,\n    phoneNumber,\n    autoVerifyTimeoutOrForceResend,\n    forceResend,\n    MODULAR_DEPRECATION_ARG,\n  );\n}\n\n/**\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n * @param {Auth} auth - The Auth instance.\n * @param {AuthProvider} provider - The auth provider.\n * @param {PopupRedirectResolver} [resolver] - Optional. The popup redirect resolver.\n * @returns {Promise<UserCredential>}\n */\nexport async function signInWithPopup(auth, provider, resolver) {\n  return auth.signInWithPopup.call(auth, provider, resolver, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Authenticates a Firebase client using a full-page redirect flow.\n * @param {Auth} auth - The Auth instance.\n * @param {AuthProvider} provider - The auth provider.\n * @param {PopupRedirectResolver} [resolver] - Optional. The popup redirect resolver.\n * @returns {Promise<void>}\n */\nexport async function signInWithRedirect(auth, provider, resolver) {\n  return auth.signInWithRedirect.call(auth, provider, resolver, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Signs out the current user.\n * @param {Auth} auth - The Auth instance.\n * @returns {Promise<void>}\n */\nexport async function signOut(auth) {\n  return auth.signOut.call(auth, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Asynchronously sets the provided user as Auth.currentUser on the Auth instance.\n * @param {Auth} auth - The Auth instance.\n * @param {User} user - The user to set as the current user.\n * @returns {Promise<void>}\n */\nexport async function updateCurrentUser(auth, user) {\n  throw new Error('updateCurrentUser is unsupported by the native Firebase SDKs');\n}\n\n/**\n * Sets the current language to the default device/browser preference.\n * @param {Auth} auth - The Auth instance.\n */\nexport function useDeviceLanguage(auth) {\n  throw new Error('useDeviceLanguage is unsupported by the native Firebase SDKs');\n}\n\n/**\n * Sets the language code.\n * @param {Auth} auth - The Auth instance.\n * @param {string} languageCode - The language code.\n */\nexport function setLanguageCode(auth, languageCode) {\n  return auth.setLanguageCode.call(auth, languageCode, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Configures a shared user access group to sync auth state across multiple apps via the Keychain.\n * @param {Auth} auth - The Auth instance.\n * @param {string} userAccessGroup - The user access group.\n * @returns {Promise<void>}\n */\nexport function useUserAccessGroup(auth, userAccessGroup) {\n  return auth.useUserAccessGroup.call(auth, userAccessGroup, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Verifies the password reset code sent to the user by email or other out-of-band mechanism.\n * @param {Auth} auth - The Auth instance.\n * @param {string} code - The password reset code.\n * @returns {Promise<string>}\n */\nexport async function verifyPasswordResetCode(auth, code) {\n  return auth.verifyPasswordResetCode.call(auth, code, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Parses the email action link string and returns an ActionCodeURL if the link is valid, otherwise returns null.\n * @param {string} link - The email action link string.\n * @returns {ActionCodeURL | null}\n */\nexport function parseActionCodeURL(link) {\n  throw new Error('parseActionCodeURL is unsupported by the native Firebase SDKs');\n}\n\n/**\n * Deletes and signs out the user.\n * @param {User} user - The user to delete.\n * @returns {Promise<void>}\n */\nexport async function deleteUser(user) {\n  return user.delete.call(user, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n * @param {User} user - The user to get the token for.\n * @param {boolean} [forceRefresh] - Optional. Whether to force refresh the token.\n * @returns {Promise<string>}\n */\nexport async function getIdToken(user, forceRefresh) {\n  return user.getIdToken.call(user, forceRefresh, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\n * @param {User} user - The user to get the token result for.\n * @param {boolean} [forceRefresh] - Optional. Whether to force refresh the token.\n * @returns {Promise<IdTokenResult>}\n */\nexport async function getIdTokenResult(user, forceRefresh) {\n  return user.getIdTokenResult.call(user, forceRefresh, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Links the user account with the given credentials.\n * @param {User} user - The user to link the credentials with.\n * @param {AuthCredential} credential - The auth credentials.\n * @returns {Promise<UserCredential>}\n */\nexport async function linkWithCredential(user, credential) {\n  return user.linkWithCredential.call(user, credential, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Links the user account with the given phone number.\n * @param {User} user - The user to link the phone number with.\n * @param {string} phoneNumber - The phone number.\n * @param {ApplicationVerifier} appVerifier - The application verifier.\n * @returns {Promise<ConfirmationResult>}\n */\nexport async function linkWithPhoneNumber(user, phoneNumber, appVerifier) {\n  throw new Error('linkWithPhoneNumber is unsupported by the native Firebase SDKs');\n}\n\n/**\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n * @param {User} user - The user to link the provider with.\n * @param {AuthProvider} provider - The auth provider.\n * @param {PopupRedirectResolver} [resolver] - Optional. The popup redirect resolver.\n * @returns {Promise<UserCredential>}\n */\nexport async function linkWithPopup(user, provider, resolver) {\n  return user.linkWithPopup.call(user, provider, resolver, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Links the OAuthProvider to the user account using a full-page redirect flow.\n * @param {User} user - The user to link the provider with.\n * @param {AuthProvider} provider - The auth provider.\n * @param {PopupRedirectResolver} [resolver] - Optional. The popup redirect resolver.\n * @returns {Promise<void>}\n */\nexport async function linkWithRedirect(user, provider, resolver) {\n  return user.linkWithRedirect.call(user, provider, resolver, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * The MultiFactorUser corresponding to the user.\n * @param {User} user - The user to get the multi-factor user for.\n * @returns {MultiFactorUser}\n */\nexport function multiFactor(user) {\n  return new MultiFactorUser(getAuth(), user);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n * @param {User} user - The user to re-authenticate.\n * @param {AuthCredential} credential - The auth credentials.\n * @returns {Promise<UserCredential>}\n */\nexport async function reauthenticateWithCredential(user, credential) {\n  return user.reauthenticateWithCredential.call(user, credential, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Re-authenticates a user using a fresh phone credential.\n * @param {User} user - The user to re-authenticate.\n * @param {string} phoneNumber - The phone number.\n * @param {ApplicationVerifier} appVerifier - The application verifier.\n * @returns {Promise<ConfirmationResult>}\n */\nexport async function reauthenticateWithPhoneNumber(user, phoneNumber, appVerifier) {\n  throw new Error('reauthenticateWithPhoneNumber is unsupported by the native Firebase SDKs');\n}\n\n/**\n * Re-authenticate a user with a federated authentication provider (Microsoft, Yahoo). For native platforms, this will open a browser window.\n * @param {User} user - The user to re-authenticate.\n * @param {AuthProvider} provider - The auth provider.\n * @param {PopupRedirectResolver} [resolver] - Optional. The popup redirect resolver. Web only.\n * @returns {Promise<UserCredential>}\n */\nexport async function reauthenticateWithPopup(user, provider, resolver) {\n  return user.reauthenticateWithPopup.call(user, provider, resolver, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Re-authenticate a user with a federated authentication provider (Microsoft, Yahoo). For native platforms, this will open a browser window.\n * @param {User} user - The user to re-authenticate.\n * @param {AuthProvider} provider - The auth provider.\n * @param {PopupRedirectResolver} [resolver] - Optional. The popup redirect resolver. Web only.\n * @returns {Promise<UserCredential>}\n */\nexport async function reauthenticateWithRedirect(user, provider, resolver) {\n  return user.reauthenticateWithRedirect.call(user, provider, resolver, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Reloads user account data, if signed in.\n * @param {User} user - The user to reload data for.\n * @returns {Promise<void>}\n */\nexport async function reload(user) {\n  return user.reload.call(user, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Sends a verification email to a user.\n * @param {User} user - The user to send the email to.\n * @param {ActionCodeSettings} [actionCodeSettings] - Optional. Action code settings.\n * @returns {Promise<void>}\n */\nexport async function sendEmailVerification(user, actionCodeSettings) {\n  return user.sendEmailVerification.call(user, actionCodeSettings, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Unlinks a provider from a user account.\n * @param {User} user - The user to unlink the provider from.\n * @param {string} providerId - The provider ID.\n * @returns {Promise<User>}\n */\nexport async function unlink(user, providerId) {\n  return user.unlink.call(user, providerId, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Updates the user's email address.\n * @param {User} user - The user to update the email for.\n * @param {string} newEmail - The new email address.\n * @returns {Promise<void>}\n */\nexport async function updateEmail(user, newEmail) {\n  return user.updateEmail.call(user, newEmail, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Updates the user's password.\n * @param {User} user - The user to update the password for.\n * @param {string} newPassword - The new password.\n * @returns {Promise<void>}\n */\nexport async function updatePassword(user, newPassword) {\n  return user.updatePassword.call(user, newPassword, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Updates the user's phone number.\n * @param {User} user - The user to update the phone number for.\n * @param {AuthCredential} credential - The auth credentials.\n * @returns {Promise<void>}\n */\nexport async function updatePhoneNumber(user, credential) {\n  return user.updatePhoneNumber.call(user, credential, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Updates a user's profile data.\n * @param {User} user - The user to update the profile for.\n * @param {{ displayName?: string | null, photoURL?: string | null }} profile - An object containing the profile data to update.\n * @returns {Promise<void>}\n */\nexport async function updateProfile(user, { displayName, photoURL: photoUrl }) {\n  return user.updateProfile.call(\n    user,\n    { displayName, photoURL: photoUrl },\n    MODULAR_DEPRECATION_ARG,\n  );\n}\n\n/**\n * Sends a verification email to a new email address.\n * @param {User} user - The user to send the email to.\n * @param {string} newEmail - The new email address.\n * @param {ActionCodeSettings} [actionCodeSettings] - Optional. Action code settings.\n * @returns {Promise<void>}\n */\nexport async function verifyBeforeUpdateEmail(user, newEmail, actionCodeSettings) {\n  return user.verifyBeforeUpdateEmail.call(\n    user,\n    newEmail,\n    actionCodeSettings,\n    MODULAR_DEPRECATION_ARG,\n  );\n}\n\n/**\n * Extracts provider specific AdditionalUserInfo for the given credential.\n * @param {UserCredential} userCredential - The user credential.\n * @returns {AdditionalUserInfo | null}\n */\nexport function getAdditionalUserInfo(userCredential) {\n  return userCredential.additionalUserInfo;\n}\n\n/**\n * Returns the custom auth domain for the auth instance.\n * @param {Auth} auth - The Auth instance.\n * @returns {Promise<string>}\n */\nexport function getCustomAuthDomain(auth) {\n  return auth.getCustomAuthDomain.call(auth, MODULAR_DEPRECATION_ARG);\n}\n\n/**\n * Returns a password validation status\n * @param {Auth} auth - The Auth instance.\n * @param {string} password - The password to validate.\n * @returns {Promise<PasswordValidationStatus>}\n */\nexport async function validatePassword(auth, password) {\n  if (password === null || password === undefined) {\n    throw new Error(\n      \"firebase.auth().validatePassword(*) expected 'password' to be a non-null or a defined value.\",\n    );\n  }\n  let passwordPolicy = await fetchPasswordPolicy(auth);\n\n  const passwordPolicyImpl = await new PasswordPolicyImpl(passwordPolicy);\n  let status = passwordPolicyImpl.validatePassword(password);\n\n  return status;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}