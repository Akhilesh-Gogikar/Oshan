{"ast":null,"code":"var _jsxFileName = \"/Users/akhileshgogikar/Oshan/oshan-app/src/components/SplashScreen.tsx\",\n  _this = this;\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming, withSequence, withDelay } from 'react-native-reanimated';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _worklet_6867654388557_init_data = {\n  code: \"function anonymous(){const{logoOpacity,logoScale}=this.__closure;return{opacity:logoOpacity.value,transform:[{scale:logoScale.value}]};}\",\n  location: \"/Users/akhileshgogikar/Oshan/oshan-app/src/components/SplashScreen.tsx\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"logoOpacity\\\",\\\"logoScale\\\",\\\"__closure\\\",\\\"opacity\\\",\\\"value\\\",\\\"transform\\\",\\\"scale\\\"],\\\"sources\\\":[\\\"/Users/akhileshgogikar/Oshan/oshan-app/src/components/SplashScreen.tsx\\\"],\\\"mappings\\\":\\\"AAiCyC,SAAAA,SAAMA,CAAA,QAAAC,WAAA,CAAAC,SAAA,OAAAC,SAAA,CAC3C,MAAO,CACLC,OAAO,CAAEH,WAAW,CAACI,KAAK,CAC1BC,SAAS,CAAE,CAAC,CAAEC,KAAK,CAAEL,SAAS,CAACG,KAAM,CAAC,CACxC,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.6.3\"\n};\nvar SplashScreen = function SplashScreen(_ref) {\n  var onAnimationFinish = _ref.onAnimationFinish;\n  var logoScale = useSharedValue(0.5);\n  var logoOpacity = useSharedValue(0);\n  useEffect(function () {\n    logoOpacity.value = withTiming(1, {\n      duration: 1000\n    });\n    logoScale.value = withSequence(withTiming(1.2, {\n      duration: 1000\n    }), withTiming(1, {\n      duration: 500\n    }), withDelay(500, withTiming(5, {\n      duration: 1000\n    })));\n    var timer = setTimeout(function () {\n      onAnimationFinish();\n    }, 3000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [logoScale, logoOpacity, onAnimationFinish]);\n  var animatedStyle = useAnimatedStyle(function () {\n    var _e = [new global.Error(), -3, -27];\n    var anonymous = function anonymous() {\n      return {\n        opacity: logoOpacity.value,\n        transform: [{\n          scale: logoScale.value\n        }]\n      };\n    };\n    anonymous.__closure = {\n      logoOpacity: logoOpacity,\n      logoScale: logoScale\n    };\n    anonymous.__workletHash = 6867654388557;\n    anonymous.__initData = _worklet_6867654388557_init_data;\n    anonymous.__stackDetails = _e;\n    return anonymous;\n  }());\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(Animated.Image, {\n      source: require('../../assets/icon.png'),\n      style: [styles.logo, animatedStyle]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    resizeMode: 'contain'\n  }\n});\nexport default SplashScreen;","map":{"version":3,"names":["React","useEffect","StyleSheet","View","Animated","useSharedValue","useAnimatedStyle","withTiming","withSequence","withDelay","jsxDEV","_jsxDEV","_worklet_6867654388557_init_data","code","location","sourceMap","version","SplashScreen","_ref","onAnimationFinish","logoScale","logoOpacity","value","duration","timer","setTimeout","clearTimeout","animatedStyle","_e","global","Error","anonymous","opacity","transform","scale","__closure","__workletHash","__initData","__stackDetails","style","styles","container","children","Image","source","require","logo","fileName","_jsxFileName","lineNumber","columnNumber","_this","create","flex","backgroundColor","justifyContent","alignItems","width","height","resizeMode"],"sources":["/Users/akhileshgogikar/Oshan/oshan-app/src/components/SplashScreen.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  withTiming,\n  withSequence,\n  withDelay,\n} from 'react-native-reanimated';\n\ninterface SplashScreenProps {\n  onAnimationFinish: () => void;\n}\n\nconst SplashScreen: React.FC<SplashScreenProps> = ({ onAnimationFinish }) => {\n  const logoScale = useSharedValue(0.5);\n  const logoOpacity = useSharedValue(0);\n\n  useEffect(() => {\n    logoOpacity.value = withTiming(1, { duration: 1000 });\n    logoScale.value = withSequence(\n      withTiming(1.2, { duration: 1000 }),\n      withTiming(1, { duration: 500 }),\n      withDelay(500, withTiming(5, { duration: 1000 })),\n    );\n\n    const timer = setTimeout(() => {\n      onAnimationFinish();\n    }, 3000); // Total animation time + delay\n\n    return () => clearTimeout(timer);\n  }, [logoScale, logoOpacity, onAnimationFinish]);\n\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: logoOpacity.value,\n      transform: [{ scale: logoScale.value }],\n    };\n  });\n\n  return (\n    <View style={styles.container}>\n      <Animated.Image\n        source={require('../../assets/icon.png')} // Adjust path to your app icon\n        style={[styles.logo, animatedStyle]}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff', // Or your splash screen background color\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    resizeMode: 'contain',\n  },\n});\n\nexport default SplashScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}